website RWTHCS {
  navigation {
    Home;
    Praktisch;

    Technisch;

    Mathematik;

    Theoretisch;

    Andere {
      Anwendungsfach;
      Wahlpflichtbereich;
      Sonstige;
      Bachelorarbeit;
    }

  }
  start page Home {
    "Studiencenter Informatik";
    content {
        landImage { "Willkommen" ; "Studiencenter Bachelor Informatik RWTH";  "LandImage" }
     row {
         textBlock {
                     "Informatik B.Sc."
                     "I think there is a world market for maybe five computers”, soll Thomas John Watson 1943 als Vorstandsvorsitzender von IBM gesagt haben. Heute wissen wir es besser! Ein Leben ohne schnelle Datenverarbeitung, ohne Internet, Apps, E-Mail, Media Streaming und intelligente Systeme ist kaum noch denkbar.

                     Informatik als Wissenschaft der Analyse, Konzeption und Realisierung informationsverarbeitender Systeme ist unverzichtbar geworden. Mit Grundbegriffen wie Architektur, Algorithmus, Information, Komplexität und Effizienz beschreibt und untersucht sie die statische Struktur und das dynamische Verhalten solcher Systeme. Sie beschäftigt sich sowohl mit der qualitativen als auch mit der quantitativen Klassifizierung von Problemen und Algorithmen und darüber hinaus mit der Lösung konkreter Anwendungsprobleme.

                     Im Spannungsfeld zwischen Mathematik und Ingenieurwissenschaft hat sich die Informatik zu einer Disziplin mit eigener wissenschaftlicher Methodik entwickelt.

                     Ein Informatikstudium an einer interdisziplinär ausgerichteten technischen Hochschule kommt dem speziellen Charakter dieser Disziplin besonders entgegen. Die Informatik der RWTH steht für eine große Vielfalt an Forschungsgebieten. Sie garantiert aber auch ein hohes Maß an interdisziplinärer Zusammenarbeit mit den Natur- und Ingenieurwissenschaften sowie den Sprach- und Kommunikationswissenschaften.

                     Um die notwendige Kommunikation mit Anwenderinnen und Anwendern zu erlernen, können ab dem dritten Semester Veranstaltungen aus dem Anwendungsbereich besucht werden. Dabei können Lehrangebote eines oder mehrerer Fächer kombiniert werden. Angeboten werden u. a. Veranstaltungen folgender Fächer: Betriebswirtschaftslehre, Mathematik, Elektrotechnik, Biologie, Maschinenbau, Medizin, Philosophie, Physik, Chemie, Psychologie.

                     Ab dem dritten Semester bietet das Studienprogramm einen Wahlpflichtbereich, der erste Möglichkeiten zur Schwerpunktsetzung eröffnet. Aus den Feldern Theoretische Informatik, Software und Kommunikation, Daten- und Informationsmanagement sowie Angewandte Informatik können einzelne Module nach Wunsch gewählt und miteinander kombiniert werden. Diese Module werden häufig in englischer Sprache angeboten.


                     de Projekte." ;

            }
  }
        row {
                  card {
                      "Praktische Informatik"

                       "practical"

                        "Die Praktische Informatik (PI) ist eines der Hauptgebiete der Informatik. ie ist zwischen der theoretischen und der angewandten Informatik angesiedelt und entwickelt grundlegende Konze...                                                     ";

                        "Praktisch"
                  }

                  card {
                    "Theoretische Informatik"

                     "theoretical"

                      "Die theoretische Informatik beschäftigt sich mit der Abstraktion, Modellbildung und grundlegenden Fragestellungen, die mit der Struktur, Verarbeitung, Übertragung und Wiedergabe von Inf...";

                      "Theoretisch"
                  }

                   card {
                    "Technische Informatik"

                    "technical"

                    "Technische Informatik ist ein Hauptgebiet der Informatik, das sich mit Architektur, Entwurf, Realisierung, Bewertung und Betrieb von Rechner-, Kommunikations- und eingebetteten Systemen au...";

                    "Technisch"
                 }}


        row{
                 card {
                    "Mathematische Gundlagen"

                     "mathe"

                      "Die Mathematik (bundesdeutsches Hochdeutsch: [matemaˈtiːk], [matemaˈtik]; österreichisches Hochdeutsch: [mateˈmaːtik];[1] altgriechisch μαθηματικὴ τέχνη mathēmatikē téchnē ‚die Kunst de...";

                      "Mathematik"
                  }


               card {
                  "Anwendungsfach"

                   "anwendungsfach"

                    "Ab dem 3. Fachsemester bzw. 2. Fachsemester bei Start im Sommersemester ist im Bachelor-Studiengang Informatik ein Anwendungsfach zu belegen, in welchem man verschiedene Module belegen mu...";

                    "Anwendungsfach"
                }

                card {
                  "Bachelorarbeit"

                   "bachelorarbeit"

                    "Die Bachelorarbeit ist eine eigenständige, wissenschaftliche Arbeit, die in der Regel am Ende des Studiums erfolgt. In dem Zeitraum von vier setzt man sich intensiv mit einem wissenschaftsnahen Thema der Informa...";

                    "Bachelorarbeit"
                }

                }

                row {
                  table "Studienverlaufplan"  "svp";
                }
        }
    }



  page Praktisch {
  "Angewandte Informatik";
    content {
       pic practical 500 x 330;

        "Die Praktische Informatik (PI) ist eines der Hauptgebiete der Informatik. Sie ist zwischen der theoretischen und der angewandten Informatik angesiedelt und entwickelt grundlegende Konzepte und Methoden zur Lösung konkreter informatischer Probleme, beispielsweise der Entwicklung von Datenstrukturen oder von Programmiersprachen. Dabei greift sie auf Erkenntnisse und Methoden der theoretischen Informatik zurück. Ein wichtiges Teilgebiet der Praktischen Informatik ist die Softwaretechnik.";
        "Bei Informatik an der RWTH gehören dazu folgende Fächer:";

        textBlock {
         "[1214957] Programmierung"
         "Sprachbeschreibung durch Grammatiken und Syntaxdiagramme Einführende imperative
                                                 Programmierkonzepte
                                                 • Grundlegende Datentypen
                                                 • Kontrollstrukturen (Sequenz, Verzweigung, Schleifen, etc.)
                                                 • Funktionen und Prozeduren
                                                 Einführende objektorientierte Programmierkonzepte
                                                 • Objekt, Klasse, Methode";

                                                 "Fortgeschrittene imperative Programmierkonzepte
                                                 • Verifikation einfacher Programme
                                                 • Pointer, Seiteneffekte und Grundlagen der Speicherverwaltung
                                                 • Parameterübergabeverfahren (call-by-value, call-by-reference)
                                                 • Rekursive (lineare) Datenstrukturen (z.B. Listen, Stacks, Queues, etc.)
                                                 • Grundlegende Beispielprogramme (z.B. einfache Suchund Sortieralgorithmen)";
                                                " Fortgeschrittene objektorientierte Programmierkonzepte
                                                 • Polymorphie, Dynamisches Binden
                                                 • Abstrakte Klassen und Interfaces
                                                 • Programmiertechniken in imperativen und objektorientierten Sprachen (z.B. Datenabstraktion,
                                                 Modularisierung, Schnittstellendokumentation, etc.)
                                                 Funktionale Programmierkonzepte";
                                                 "• Deklarationen, Ausdrücke, Pattern Matching, Auswertungsstrategien (call-by-value, call-byname)
                                                 • Typkonzepte und Polymorphie
                                                 • Einfache Funktionen höherer Ordnung
                                                 Logische Programmierkonzepte
                                                 • Fakten und Regeln
                                                 • Unifikation und Bearbeitung von Anfragen";}

      textBlock {
       "[1211971] Datenstrukturen und Algorithmen"
        "Komplexität von Algorithmen
        • Modelle für Laufzeit und Speicherplatz
        • Worst-Case- und Average-Case-Analysen
        • Asymptotische Komplexität („O-Notation“)
        • Komplexitätskategorien (z.B. exponentiell, polynomiell)";
       " Allgemeine Entwurfs- und Analysemethoden
        • Greedy-Algorithmen
        • Divide-and-Conquer-Verfahren
        • Dynamische Programmierung
        • Heuristische Ansätze (insbesondere Branch-and-Bound)
        • Lösen von Rekursiongleichungen (insbes. „Mastertheorem“)";
       " Algorithmen für Sortierprobleme
        • elementare Sortieralgorithmen (z.B. Insertionsort)
        • fortgeschrittene Sortierverfahren (Merge-, Quick-, Heapsort)
        • untere Schranke für vergleichsbasierte Sortierverfahren
        • Schlüsselbasiertes Sortieren (z.B. Bucketsort)
        • Order Statistics (z.B. Quickselect)";
       " Datenstrukturen zur Verwaltung von Mengen
        • Datenstrukturen für Mengen
        • Binäre Suchbäume
        • Balancierte Suchbäume
        • Priority Queues
        • Hashingverfahren";
       " Graph- und Netzwerkalgorithmen
        • Tiefensuche, Breitensuche
        • Bestimmung kürzester Wege
        • Berechnung minimaler Spannbäume
        • Einführung in Flussalgorithmen (Ford-Fulkerson-Methode)";
        "Einführung in die algorithmische Geometrie, u.a.
        • Sweeplinetechnik
        • Bestimmung nächster Nachbarn";
       }
       textBlock{
       "[1211969] Datenbanken und Informationssysteme"

     "  • Aufgaben und Bedeutung von Informationssystemen
       • Relationale Datenbankmodelle
       • Relationale Anfragesprachen und ihre formalen Grundlagen
       • Entwurf relationaler Datenbanken (konzeptuelle Modellierung, Normalisierungstheorie)
       • Grundelemente relationaler Datenbankimplementierung (Architekturen, Anfrageverarbeitung,
       Transaktionsmanagement)";
       "• Überblick neuere Datenmodelle: - objektorientierte / objektrelationale Datenbanken - InternetInformationssysteme/ XML - Betriebliche Informationsmodellierung und ERP
       • Praktische Übungen im Datenbanklabor: SQL-Day, XML-Day, ERP-Day";
       }
         textBlock{
               "[1211965] Softwaretechnik"

                 "Die Vorlesung erarbeitet die Grundlagen zur Entwicklung komplexer Softwaresysteme. Behandelt
                 werden Vorgehensmodelle, die Erhebung von Anforderungen, Softwarearchitektur und -entwurf,
                 der Weg zur Implementierung und zur Qualitätssicherung mit Tests. Dabei wird vorwiegend die
                 Modellierungssprache UML zur Darstellung genutzt.";
                " • Einführung, Grundbegriffe
                 • Aktivitäten und Dokumente im Lebenszyklus
                 • Der Entwicklungs- und Wartungsprozess
                 • Problemanalyse und Anforderungserhebung
                 • Entwurf und Architekturmodellierung, Architekturmuster
                 • Entwurfsmuster
                 • Qualitätssicherung
                 • Projektmanagement
                 • Dokumentation
                 • Demonstration von Werkzeugen: MontiWeb";

              }

         "Code Beispiel:";

         codeBlock {"
          # Initialize denominator
          k = 1

          # Initialize sum
          s = 0

          for i in range(1000000):

              # even index elements are positive
              if i % 2 == 0:
                  s + = 4/k
              else:

                  # odd index elements are negative
                  s -= 4/k

              # denominator is odd
              k += 2

          print(s)";
         }

    }
  }


  page Theoretisch {
  "Theoretische Informatik";
    content {
        aside {
                  pic AlanTuring 200 x 300;
                  "Alan Turing";
        }
       pic theoretical 500 x 330;


       "Die theoretische Informatik beschäftigt sich mit der Abstraktion, Modellbildung und grundlegenden Fragestellungen, die mit der Struktur, Verarbeitung, Übertragung und Wiedergabe von Informationen in Zusammenhang stehen. Ihre Inhalte sind Automatentheorie, Theorie der formalen Sprachen, Berechenbarkeits- und Komplexitätstheorie, aber auch Logik und formale Semantik sowie die Informations-, Algorithmen- und Datenbanktheorie.";
       "Bei Informatik an der RWTH gehören dazu folgende Fächer:";

	textBlock{
       "[1214961] Formale Systeme, Automaten, Prozesse"
	"Formale Systeme: Terme, Wörter, Sprachen anhand von Kernbeispielen: u.a. Zahlterme, arithmetische und boolesche Terme, while-Programme. Definition von Termmengen und Programmiersprachen durch Regelsysteme (Termersetzungssysteme, Grammatiken), Ableitungsbegriff, Methode der strukturellen Induktion. Klassifikation von Grammatiken (Chomsky-Hierarchie) und elementare Sachverhalte zu kontextfreien Grammatiken: Normalformen, Wortproblem (Ableitbarkeitstest), Nichtleerheitstest.
	Automaten: Endliche Automaten (deterministisch, nichtdeterministisch), Abschlusseigenschaften (u.a. Produktautomaten), reguläre Ausdrücke, Nichtleerheits- und Äquivalenztest, Nachweis nichtregulärer Sprachen. Kellerautomaten (deterministisch und nichtdeterministisch), Übersetzung von kontextfreien Grammatiken in Kellerautomaten als Beispiel der Implementierung von Rekursion durch Kellerspeicher.
	Prozesse: Elementare Modellierungsformen verteilter und nebenläufiger Systeme: Synchronisierte Produkte, Petrinetze und kommunizierende sequentielle Prozesse (CSP). Vorstellung und Einübung anhand von Beispielen, Vergleich mit dem Grundmodell des endlichen Automaten.";
	}

	textBlock{
       "[1212004] Berechenbarkeit und Komplexität"
	"Beispiele algorithmischer Probleme, Darstellung durch Sprachen und Funktionen, Frage der Lösbarkeit
	Turingmaschinen, Church-Turing-These
	Berechenbarkeit, Entscheidbakeit, Aufzählbarkeit
	Simulationen zwischen verschiedenen Berechnungsmodellen, universelle Maschinen bzw. Programme
	Unentscheidbare Probleme (u.a. Postsches Korrespondenzproblem)
	Komplexitätsklassen und elementare Sachverhalte zu Zeit- und Platzkomplexität
	Polynomielle Reduktionen und NP-Vollständigkeit
	Approximation als Methode zur Lösung NP-harter Probleme,
	Beispiel eines Polynomzeit-Approximationsschemas (FPTAS)";
	}

	textBlock{
       "[1113004] Mathematische Logik I"
	"Aussagenlogik (Grundlagen, algorithmische Fragen, Kompaktheit, Resolution, Sequenzenkalkül). Strukturen, Syntax und Semantik der Prädikatenlogik. Einführung in weitere Logiken (modale und temporale Logiken, Logiken höherer Stufe). Auswertungsspiele, Modellvergleichsspiele. Beweiskalküle, Termstrukturen, Vollständigkeitssatz. Kompaktheitssatz und Anwendungen. Entscheidbarkeit, Unentscheidbarkeit und Komplexität von logischen Spezifikationen";
	}

    }
  }



  page Mathematik {
  "Mathematik";
    content {
       pic mathe 500 x 330;
       "Die Mathematik (bundesdeutsches Hochdeutsch: [matemaˈtiːk], [matemaˈtik]; österreichisches Hochdeutsch: [mateˈmaːtik];[1] altgriechisch μαθηματικὴ τέχνη mathēmatikē téchnē ‚die Kunst des Lernens‘) ist eine Formalwissenschaft, die aus der Untersuchung von geometrischen Figuren und dem Rechnen mit Zahlen entstand. Für Mathematik gibt es keine allgemein anerkannte Definition; heute wird sie üblicherweise als eine Wissenschaft beschrieben, die durch logische Definitionen selbstgeschaffene abstrakte Strukturen mittels der Logik auf ihre Eigenschaften und Muster untersucht.";
       "Bei Informatik an der RWTH gehören dazu folgende Fächer:";
	textBlock{
       "[1115472] Diskrete Strukturen"
	"Mengen, Funktionen, Relationen anhand informatischer Beispiele
	Boolesche Algebra
	Endliche Kombinatorik
	Elementare Zahlentheorie
	Körper und Polynomring
	Vektorräume, lineare Abbildungen und Matrizen
	Basis, Dimension und Rang";
	}

	textBlock{
       "[1114971] Analysis für Informatik"
	"Reelle Zahlen
	Folgen reeller Zahlen
	Reelle Funktionen
	Differentiation
	Integration (Riemannsches Integral)
	Reihen reeller Zahlen
	Folgen und Reihen von Funktionen
	Uneigentliche Integrale
	Funktionen mehrerer Veränderlicher";
	}

	textBlock{
       "[1115861] Lineare Algebra"
	"Lineare Gleichungssysteme - Lösungsmengen, über- und unterbestimmte Systeme - Gauß-Algorithmus und LU-Zerlegung - Inverse und Pseudoinverse
	Determinanten
	Eigenwerte und Eigenvektoren, Diagonalisierung
	Bilinearformen und quadratische Formen, Skalarprodukte, Orthogonalität
	Gram-Schmidt Verfahren, QR-Zerlegung, Singulärwertzerlegung
	Spektralsatz (Hauptachsentransformation)
	Diskrete Fouriertransformation";
	}

	textBlock{
       "[1112712] Einführung in die angewandte Stochastik"
	"1. Einleitung

	2. Wahrscheinlichkeitsrechnung

	- a. Wahrscheinlichkeitsräume

	i. Grundlagen der Wahrscheinlichkeitsrechnung: (Mengentheoretische Grundlagen, Kolmogorov-Axiome, Laplace-Modell, Grundformeln der Kombinatorik)
	ii. Diskrete Wahrscheinlichkeitsmaßen: (Binomialverteilung, Poisson-Verteilung, Geometrische Verteilung, ...)
	iii. Eigenschaften von Wahrscheinlichkeitsmaßen
	iv. Bedingte Wahrscheinlichkeiten
	v. Stochastische Unabhängigkeit von Ereignissen
	vi. Wahrscheinlichkeitsmaße mit Riemann-Dichten: Exponential-, Weibull-, Gamma-, Normal- Rechteckverteilung, ..
	- b. Zufallsvariablen

	i. Zufallsvariablen und Wahrscheinlichkeitsmaße
	ii. Verteilungsdichte, Verteilungsfunktion und Quantilfunktion
	iii. Mehrdimensionale Zufallsariablen: gemeinsame Verteilung mehrdimensionale Normalverteilung, Randverteilung bedingte Verteilung, Produkträume
	iv. Transformation von Zufallsvariablen: (Dichtetransformationssatz, Faltung)
	v. Erwartungswerte, Varianz, Kovarianz und Korrelation
	vi. Erzeugende Funktionen und Laplace-Transformation
	vii. Bedingte Erwartungswerte
	3. Statistik

	- a. Grundlegende Methoden der Beschreibenden Statistik

	i. Einführung und Grundbegriffe
	ii. Lage- und Streuungsmaße
	iii. Empirische Verteilungsfunktion
	iv. Klassierte Daten und Histogramm
	v. Zusammenhangsmaße
	vi. Regressionsanalyse
	- b. Elementare Verfahren der Schließenden Statistik

	i. Problemstellungen der schließenden Statistik
	ii. Parameterschätzungen: Erwartungstreue, Güte und Konsistenz
	iii. Schätzung der Verteilungsfunktion
	iv. Maximum-Likelihood-Schätzung
	v. Konfidenzintervalle
	vi. Schätzungen bei Normalverteilung
	vii. Zentraler Grenzwertsatz
	viii. Lineare Regressionsmodelle
	ix. Elemente der Bayes-Statistik: Bayessche Entscheidungstheorie, Parameter- und Bereichsschätzung, Schätzung einer Wahrscheinlichkeit";
	}

    }



  }




  page Technisch {
  "Technische Informatik";
    content {
      pic technical 400 x 280;
      "Technische Informatik ist ein Hauptgebiet der Informatik, das sich mit Architektur, Entwurf, Realisierung, Bewertung und Betrieb von Rechner-, Kommunikations- und eingebetteten Systemen auf der Ebene der Hardware als auch der 		systemnahen Software beschäftigt. Technische Informatik wird gelegentlich als Schnittstelle der Informatik zur Elektrotechnik beschrieben. Die Wurzeln der technischen Informatik liegen in der Elektrotechnik, insbesondere in der Digitaltechnik, sowie in der Logik und der diskreten Mathematik.";
      "Bei Informatik an der RWTH gehören dazu folgende Fächer:";

	textBlock{
      "[1214958] Einführung in die Technische Informatik"
	"Auffrischung Physik-Grundwissen (Ladung, Feld, Potenzial, Spannung, Strom, Widerstand, Ohmsches Gesetz, Spannungsteiler, Kirchhoffsche Regeln, Kapazität, Kondensator, Ladekurve, RCTiefpass, Induktivität, RLC-Schwingkreis)
	Halbleiter-Bauelemente (pn-Übergang, Diode, Kennlinie, Anwendungen: Gleichrichter, UND/ODER-Schaltungen, Bipolartransistor, Kennlinie, physikalische Erklärung (npn, pnp), Anwendungen: Schalter, Flipflop)
	Programmierbare Logik (FPGA)
	Hardwareentwurf (Einführung in Schematics und VHDL, Synthese eines einfachen Schaltwerkes (z.B. Automat oder ALU) in VHDL)
	Analoge Schaltungen (Motivation: Anbindung des Rechners an seine Umgebung; Operationsverstärker, Grundschaltungen: Komparator, Schmitt-Trigger, Analogrechner, Analog-Digital- und Digital-Analogwandlung mit Operationsverstärkern)
	Mikrocontroller (Architektur, Interrupts, Programmierung, Anwendungen)
	Schaltfunktionen und ihre Repräsentation
	Spezifische Schaltnetze und ihre Verbesserung
	Schaltnetzwerke
	Rechnerarithmetik
	Von-Neumann-Architektur, CISC/RISC";
	}

	textBlock{
      "[1211967] Systemprogrammierung"
	"Das Praktikum Systemprogrammierung vermittelt zentrale Themen der hardwarenahen Systemprogrammierung. Im Verlauf dieses Praktikums implementieren die Studierenden ein Betriebssystem in der Programmiersprache C für einen Mikrocontroller. Außerdem werden elektronische Grundlagen vermittelt, in die elementare Signalverarbeitung eingeführt, sowie auf typische Fragestellungen der hardwarenahen Programmerstellung wie Interrupts, limitierte Hardware oder integrierte Funktionalität des Mikrocontrollers eingegangen. Folgende Themen werden explizit behandelt: Auffrischung physikalischen Grundwissens, Umgang mit Messinstrumenten; Mikrocontroller (Architektur, Programmierung, Anwendungen); Scheduler, Interrupts &; Polling, Speicher und Speicherverwaltung; Ansprechen externer Hardware am Beispiel von Speicherbausteinen, A/D-Wandler; Analoge Schaltungen - Anbindung des Mikrocontrollers an seine Umgebung.";
	}

	textBlock{
      "[1214960] Betriebssysteme und Systemsoftware"
	"Aufgaben und Struktur von Betriebssystemen
	Das Betriebssystem Unix
	Systemaufrufe und Shellprogrammierung
	Einführung in die Programmiersprache C
	Prozessverwaltung: Prozesse, Threads und Interprozesskommunikation
	Prozess-Synchronisation, Nebenläufigkeit und Deadlocks
	CPU-Scheduling
	Speicherverwaltung: Segmentierung, Paging, Fragmentierung, virtueller Speicher
	Stack- und Heap-Verwaltung, Garbage Collection
	Dateisystem und Rechteverwaltung
	I/O-System
	Verteilte Systeme
	Socket-Programmierung";
	}

	textBlock{
      "[1211972] Datenkommunikation und Sicherheit"
	"Client/Server- und Peer-to-Peer-Systeme
	OSI-Referenzmodell und TCP/IP-Referenzmodell
	Übertragungsmedien und Signaldarstellung
	Fehlerbehandlung, Flusssteuerung und Medienzugriff
	Lokale Netze, speziell Ethernet
	Netzkomponenten und Firewalls
	Internet-Protokolle: IP, Routing, TCP/UDP
	Sicherheitsmanagement und Datenschutz, Sicherheitsprobleme und Angriffe im Internet
	Grundlagen der Kryptographie und sichere Internet-Protokolle";
	}
    }
  }



  page Anwendungsfach {

  "Anwendungsfach";
    content {
        pic anwendungsfach 400 x 280;
        "Ab dem 3. Fachsemester bzw. 2. Fachsemester bei Start im Sommersemester ist im Bachelor-Studiengang Informatik ein Anwendungsfach zu belegen. Das aktuelle Angebot an Anwendungsfächern wird während des Sommersemesters in einer eigenen Veranstaltung vorgestellt. Der Termin wird auf den Webseiten der Fachgruppe Informatik angekündigt werden.";
    }
  }

  page Wahlpflichtbereich {
  "Wahlpflichtfächer";
    content {
        pic wahl 400 x 280;
        "Ab dem dritten Fachsemester sind im Bachelor-Studiengang Informatik 3 – 4 (18 – 24 CP) Module aus Wahlpflichtbereich Informatik zu belegen. Abgesehen von der Einschränkung, dass mindestens eines dieser Wahlpflichtmodule aus dem Bereich Theoretische Informatik gewählt werden muss, gibt es bei der Wahl der Wahlpflichtmodule keine weiteren Einschränkungen. Zu Beginn jedes Semesters gibt es eine Auflistung, in der die im aktuellen Semester angebotenen Wahlpflichtveranstaltungen vorgestellt werden.";
    }
  }

  page Sonstige {
  "Sonstige";
    content {
        aside {
              "Für einige Module müssen";
              "Sie sich bei Supra anmelden";
        }
        pic sonstige 400 x 280;
        "Hier müssen Proseminar, Seminar, Praktika und NTW gewählt werden";
    }
  }

  page Bachelorarbeit {
  "Bachelorarbeit";
    content {
        pic bachelorarbeit 400 x 280;
        textBlock {
        "Anfertigung einer Bachelorarbeit"

        "Die Bachelorarbeit ist eine eigenständige,
        wissenschaftliche Arbeit, die in der Regel am Ende
        des Studiums erfolgt. In dem Zeitraum von vier setzt man sich intensiv mit
         einem wissenschaftsnahen Thema der Informatik auseinarnder. Diese Arbeiten
         finden in der Regel an den Lehreinheiten der Fachgruppe Informatik statt und
         werden durch zwei Gutachten beurteilt. Dabei ist die konkrete Aufgabenstellung
         der Arbeit abhängig davon,welche Lehreinheit die Betreuung übernimmt. Das Thema
         kann theoretisch oder praktisch orientiert sein.";
         }

        "Nützliche Vorerfahrungen sammelt man im Proseminar und Seminar:";
        -> Sonstige "Sonstige";



    }


  }





}
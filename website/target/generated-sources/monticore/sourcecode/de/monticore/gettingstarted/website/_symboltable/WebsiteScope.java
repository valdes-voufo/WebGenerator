/* generated from model Website */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package de.monticore.gettingstarted.website._symboltable;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;

import de.monticore.symboltable.*;


/* Hookpoint: ClassContent:Imports */

/* generated by template cd2java.Annotations*/
// empty template: no Annotation


/* Hookpoint: ClassContent:Annotations */

 public  class WebsiteScope  implements de.monticore.gettingstarted.website._symboltable.IWebsiteScope {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  com.google.common.collect.LinkedListMultimap<String,de.monticore.gettingstarted.website._symboltable.PageSymbol> pageSymbols
  = com.google.common.collect.LinkedListMultimap.create()
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  com.google.common.collect.LinkedListMultimap<String,de.monticore.symboltable.SymbolWithScopeOfUnknownKind> unknownSymbols
  = com.google.common.collect.LinkedListMultimap.create()
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  boolean pageSymbolsAlreadyResolved
  = false
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  boolean unknownSymbolsAlreadyResolved
  = false
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.gettingstarted.website._symboltable.IWebsiteScope enclosingScope
  
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  Optional<de.monticore.symboltable.IScopeSpanningSymbol> spanningSymbol
  = Optional.empty()
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  boolean shadowing
  
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  boolean exportingSymbols
  = true
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  boolean ordered
  
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  Optional<String> name
  = Optional.empty()
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  Optional<de.monticore.ast.ASTNode> astNode
  = Optional.empty()
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  List<de.monticore.gettingstarted.website._symboltable.IWebsiteScope> subScopes
  = new java.util.ArrayList<>()
;


    /* generated by template cd2java.Constructor*/
 public  WebsiteScope()
 {
  super();
    this.name = Optional.empty();
}

    /* generated by template cd2java.Constructor*/
 public  WebsiteScope(boolean shadowing)
 {
  this.shadowing = shadowing;
    this.name = Optional.empty();
}

    /* generated by template cd2java.Constructor*/
 public  WebsiteScope(de.monticore.gettingstarted.website._symboltable.IWebsiteScope enclosingScope)
 {
  this(enclosingScope, false);
}

    /* generated by template cd2java.Constructor*/
 public  WebsiteScope(de.monticore.gettingstarted.website._symboltable.IWebsiteScope enclosingScope,boolean shadowing)
 {
  this.setEnclosingScope(enclosingScope);
    this.shadowing = shadowing; 
    this.name = Optional.empty();
}


    /* generated by template cd2java.Method*/
 public  void add (de.monticore.gettingstarted.website._symboltable.PageSymbol symbol)

 {
    this.pageSymbols.put(symbol.getName(), symbol);
    symbol.setEnclosingScope(this);
}

    /* generated by template cd2java.Method*/
 public  void remove (de.monticore.gettingstarted.website._symboltable.PageSymbol symbol)

 {
    this.pageSymbols.remove(symbol.getName(), symbol);
}

    /* generated by template cd2java.Method*/
 public  com.google.common.collect.LinkedListMultimap<String,de.monticore.gettingstarted.website._symboltable.PageSymbol> getPageSymbols ()

 {
    return this.pageSymbols;
}

    /* generated by template cd2java.Method*/
 public  void add (de.monticore.symboltable.SymbolWithScopeOfUnknownKind symbol)

 {
    this.unknownSymbols.put(symbol.getName(), symbol);
    symbol.setEnclosingScope(this);
}

    /* generated by template cd2java.Method*/
 public  void remove (de.monticore.symboltable.SymbolWithScopeOfUnknownKind symbol)

 {
    this.unknownSymbols.remove(symbol.getName(), symbol);
}

    /* generated by template cd2java.Method*/
 public  com.google.common.collect.LinkedListMultimap<String,de.monticore.symboltable.SymbolWithScopeOfUnknownKind> getUnknownSymbols ()

 {
    return this.unknownSymbols;
}

    /* generated by template cd2java.Method*/
 public  boolean isPageSymbolsAlreadyResolved ()

 {
    /* generated by template methods.Get*/

return this.pageSymbolsAlreadyResolved;

}

    /* generated by template cd2java.Method*/
 public  void setPageSymbolsAlreadyResolved (boolean pageSymbolsAlreadyResolved)

 {
    /* generated by template methods.Set*/

this.pageSymbolsAlreadyResolved = pageSymbolsAlreadyResolved;

}

    /* generated by template cd2java.Method*/
 public  boolean isUnknownSymbolsAlreadyResolved ()

 {
    /* generated by template methods.Get*/

return this.unknownSymbolsAlreadyResolved;

}

    /* generated by template cd2java.Method*/
 public  void setUnknownSymbolsAlreadyResolved (boolean unknownSymbolsAlreadyResolved)

 {
    /* generated by template methods.Set*/

this.unknownSymbolsAlreadyResolved = unknownSymbolsAlreadyResolved;

}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._symboltable.IWebsiteScope getEnclosingScope ()

 {
    /* generated by template methods.Get*/

return this.enclosingScope;

}

    /* generated by template cd2java.Method*/
 public  void setEnclosingScope (de.monticore.gettingstarted.website._symboltable.IWebsiteScope enclosingScope)

 {
    /* generated by template _symboltable.scope.SetEnclosingScope*/
if (this.enclosingScope != null && enclosingScope != null) {
if (this.enclosingScope == enclosingScope) {
      return;
    }
    Log.warn("0xA1042 Scope \"" + getName() + "\" has already an enclosing scope.");
  }

  // remove this scope from current (old) enclosing scope, if exists.
if (this.enclosingScope != null) {
this.enclosingScope.removeSubScope(this);
  }

  // add this scope to new enclosing scope, if exists.
if (enclosingScope != null) {
enclosingScope.addSubScope(this);
  }

  // set new enclosing scope (or empty)
  this.enclosingScope = enclosingScope;
}

    /* generated by template cd2java.Method*/
 public  de.monticore.symboltable.IScopeSpanningSymbol getSpanningSymbol ()

 {
    /* generated by template methods.opt.Get4Opt*/

    if (isPresentSpanningSymbol()) {
        return this.spanningSymbol.get();
    }
    Log.error("0xA7003x84373 get for SpanningSymbol can't return a value. Attribute is empty.");
    // Normally this statement is not reachable
    throw new IllegalStateException();

}

    /* generated by template cd2java.Method*/
 public  boolean isPresentSpanningSymbol ()

 {
    /* generated by template methods.opt.IsPresent4Opt*/

return this.spanningSymbol.isPresent();

}

    /* generated by template cd2java.Method*/
 public  void setSpanningSymbol (de.monticore.symboltable.IScopeSpanningSymbol spanningSymbol)

 {
    /* generated by template _symboltable.scope.SetSpanningSymbol*/

  /* generated by template methods.opt.Set4Opt*/

this.spanningSymbol = Optional.ofNullable(spanningSymbol);

  setName(spanningSymbol.getName());
}

    /* generated by template cd2java.Method*/
 public  void setSpanningSymbolAbsent ()

 {
    /* generated by template _symboltable.scope.SetSpanningSymbolAbsent*/

  /* generated by template methods.opt.SetAbsent*/

this.spanningSymbol = Optional.empty();

  setNameAbsent();
}

    /* generated by template cd2java.Method*/
 public  boolean isShadowing ()

 {
    /* generated by template methods.Get*/

return this.shadowing;

}

    /* generated by template cd2java.Method*/
 public  void setShadowing (boolean shadowing)

 {
    /* generated by template methods.Set*/

this.shadowing = shadowing;

}

    /* generated by template cd2java.Method*/
 public  boolean isExportingSymbols ()

 {
    /* generated by template methods.Get*/

return this.exportingSymbols;

}

    /* generated by template cd2java.Method*/
 public  void setExportingSymbols (boolean exportingSymbols)

 {
    /* generated by template methods.Set*/

this.exportingSymbols = exportingSymbols;

}

    /* generated by template cd2java.Method*/
 public  boolean isOrdered ()

 {
    /* generated by template methods.Get*/

return this.ordered;

}

    /* generated by template cd2java.Method*/
 public  void setOrdered (boolean ordered)

 {
    /* generated by template methods.Set*/

this.ordered = ordered;

}

    /* generated by template cd2java.Method*/
 public  String getName ()

 {
    /* generated by template methods.opt.Get4Opt*/

    if (isPresentName()) {
        return this.name.get();
    }
    Log.error("0xA7003x07465 get for Name can't return a value. Attribute is empty.");
    // Normally this statement is not reachable
    throw new IllegalStateException();

}

    /* generated by template cd2java.Method*/
 public  boolean isPresentName ()

 {
    /* generated by template methods.opt.IsPresent4Opt*/

return this.name.isPresent();

}

    /* generated by template cd2java.Method*/
 public  void setName (String name)

 {
    /* generated by template methods.opt.Set4Opt*/

this.name = Optional.ofNullable(name);

}

    /* generated by template cd2java.Method*/
 public  void setNameAbsent ()

 {
    /* generated by template methods.opt.SetAbsent*/

this.name = Optional.empty();

}

    /* generated by template cd2java.Method*/
 public  de.monticore.ast.ASTNode getAstNode ()

 {
    /* generated by template methods.opt.Get4Opt*/

    if (isPresentAstNode()) {
        return this.astNode.get();
    }
    Log.error("0xA7003x43378 get for AstNode can't return a value. Attribute is empty.");
    // Normally this statement is not reachable
    throw new IllegalStateException();

}

    /* generated by template cd2java.Method*/
 public  boolean isPresentAstNode ()

 {
    /* generated by template methods.opt.IsPresent4Opt*/

return this.astNode.isPresent();

}

    /* generated by template cd2java.Method*/
 public  void setAstNode (de.monticore.ast.ASTNode astNode)

 {
    /* generated by template methods.opt.Set4Opt*/

this.astNode = Optional.ofNullable(astNode);

}

    /* generated by template cd2java.Method*/
 public  void setAstNodeAbsent ()

 {
    /* generated by template methods.opt.SetAbsent*/

this.astNode = Optional.empty();

}

    /* generated by template cd2java.Method*/
 public  void addSubScope (de.monticore.gettingstarted.website._symboltable.IWebsiteScope subScope)

 {
    /* generated by template _symboltable.scope.AddSubScope*/
  if (!this.subScopes.contains(subScope)) {
    this.subScopes.add(subScope);
    subScope.setEnclosingScope(this);
  }
}

    /* generated by template cd2java.Method*/
 public  void removeSubScope (de.monticore.gettingstarted.website._symboltable.IWebsiteScope subScope)

 {
    /* generated by template _symboltable.scope.RemoveSubScope*/
  if (this.subScopes.contains(subScope)) {
    this.subScopes.remove(subScope);
    if (subScope.getEnclosingScope() != null && subScope.getEnclosingScope() == this) {
      subScope.setEnclosingScope(null);
    }
  }
}

    /* generated by template cd2java.Method*/
 public  List<de.monticore.gettingstarted.website._symboltable.IWebsiteScope> getSubScopes ()

 {
    /* generated by template _symboltable.scope.GetSubScopes*/
  return java.util.Collections.unmodifiableList(new ArrayList(subScopes));
}

    /* generated by template cd2java.Method*/
 public  void setSubScopes (List<de.monticore.gettingstarted.website._symboltable.IWebsiteScope> subScopes)

 {
    /* generated by template _symboltable.scope.SetSubScopes*/
  this.subScopes.forEach(this::removeSubScope);
  subScopes.forEach(this::addSubScope);
}

    /* generated by template cd2java.Method*/
 public  void accept (de.monticore.gettingstarted.website._visitor.WebsiteTraverser visitor)

 {
    visitor.handle(this);
}

    /* generated by template cd2java.Method*/
 public  void accept (de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsTraverser visitor)

 {
    /* generated by template _symboltable.scope.AcceptScope*/

  if (visitor instanceof de.monticore.gettingstarted.website._visitor.WebsiteTraverser) {
    accept((de.monticore.gettingstarted.website._visitor.WebsiteTraverser) visitor);
  } else {
    throw new UnsupportedOperationException("0xA7012x94000 Scope node type WebsiteScope expected a visitor of type de.monticore.gettingstarted.website._visitor.WebsiteTraverser, but got de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsTraverser.");
  }
}

    /* generated by template cd2java.Method*/
 public  void accept (de.monticore.mcbasics._visitor.MCBasicsTraverser visitor)

 {
    /* generated by template _symboltable.scope.AcceptScope*/

  if (visitor instanceof de.monticore.gettingstarted.website._visitor.WebsiteTraverser) {
    accept((de.monticore.gettingstarted.website._visitor.WebsiteTraverser) visitor);
  } else {
    throw new UnsupportedOperationException("0xA7012x33398 Scope node type WebsiteScope expected a visitor of type de.monticore.gettingstarted.website._visitor.WebsiteTraverser, but got de.monticore.mcbasics._visitor.MCBasicsTraverser.");
  }
}

    /* generated by template cd2java.Method*/
 public  void accept (de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisTraverser visitor)

 {
    /* generated by template _symboltable.scope.AcceptScope*/

  if (visitor instanceof de.monticore.gettingstarted.website._visitor.WebsiteTraverser) {
    accept((de.monticore.gettingstarted.website._visitor.WebsiteTraverser) visitor);
  } else {
    throw new UnsupportedOperationException("0xA7012x80087 Scope node type WebsiteScope expected a visitor of type de.monticore.gettingstarted.website._visitor.WebsiteTraverser, but got de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisTraverser.");
  }
}

    /* generated by template cd2java.Method*/
 public  void addSubScope (de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope subScope)

 {
    this.addSubScope((de.monticore.gettingstarted.website._symboltable.IWebsiteScope) subScope);
}

    /* generated by template cd2java.Method*/
 public  void removeSubScope (de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope subScope)

 {
    this.removeSubScope((de.monticore.gettingstarted.website._symboltable.IWebsiteScope) subScope);
}

    /* generated by template cd2java.Method*/
 public  void setEnclosingScope (de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope newEnclosingScope)

 {
    this.setEnclosingScope((de.monticore.gettingstarted.website._symboltable.IWebsiteScope) newEnclosingScope);
}

    /* generated by template cd2java.Method*/
 public  void addSubScope (de.monticore.mcbasics._symboltable.IMCBasicsScope subScope)

 {
    this.addSubScope((de.monticore.gettingstarted.website._symboltable.IWebsiteScope) subScope);
}

    /* generated by template cd2java.Method*/
 public  void removeSubScope (de.monticore.mcbasics._symboltable.IMCBasicsScope subScope)

 {
    this.removeSubScope((de.monticore.gettingstarted.website._symboltable.IWebsiteScope) subScope);
}

    /* generated by template cd2java.Method*/
 public  void setEnclosingScope (de.monticore.mcbasics._symboltable.IMCBasicsScope newEnclosingScope)

 {
    this.setEnclosingScope((de.monticore.gettingstarted.website._symboltable.IWebsiteScope) newEnclosingScope);
}

    /* generated by template cd2java.Method*/
 public  void addSubScope (de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope subScope)

 {
    this.addSubScope((de.monticore.gettingstarted.website._symboltable.IWebsiteScope) subScope);
}

    /* generated by template cd2java.Method*/
 public  void removeSubScope (de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope subScope)

 {
    this.removeSubScope((de.monticore.gettingstarted.website._symboltable.IWebsiteScope) subScope);
}

    /* generated by template cd2java.Method*/
 public  void setEnclosingScope (de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope newEnclosingScope)

 {
    this.setEnclosingScope((de.monticore.gettingstarted.website._symboltable.IWebsiteScope) newEnclosingScope);
}

    /* generated by template cd2java.Method*/
 public  List<de.monticore.gettingstarted.website._symboltable.PageSymbol> resolvePageSubKinds (boolean foundSymbols,String name,de.monticore.symboltable.modifiers.AccessModifier modifier,java.util.function.Predicate<de.monticore.gettingstarted.website._symboltable.PageSymbol> predicate)

 {
    /* generated by template _symboltable.scope.ResolveSubKinds*/

  List<de.monticore.gettingstarted.website._symboltable.PageSymbol> res = new ArrayList<>();
  return res;
}


}



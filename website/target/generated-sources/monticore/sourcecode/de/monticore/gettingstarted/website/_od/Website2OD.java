/* generated from model Website */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package de.monticore.gettingstarted.website._od;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;



/* Hookpoint: ClassContent:Imports */

/* generated by template cd2java.Annotations*/
// empty template: no Annotation


/* Hookpoint: ClassContent:Annotations */

 public  class Website2OD  implements de.monticore.gettingstarted.website._visitor.WebsiteVisitor2,de.monticore.gettingstarted.website._visitor.WebsiteHandler {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.gettingstarted.website._visitor.WebsiteTraverser traverser
  
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.prettyprint.IndentPrinter pp
  
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.generating.templateengine.reporting.commons.ReportingRepository reporting
  
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  boolean printEmptyOptional
  = false;
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  boolean printEmptyList
  = false;
;


    /* generated by template cd2java.Constructor*/
 public  Website2OD(de.monticore.prettyprint.IndentPrinter printer,de.monticore.generating.templateengine.reporting.commons.ReportingRepository reporting)
 {
  /* generated by template _od.ConstructorOD*/
  this.reporting = reporting;
  this.pp = printer;
}


    /* generated by template cd2java.Method*/
 public  void handle (de.monticore.gettingstarted.website._ast.ASTWebsite node)

 {
    /* generated by template _od.HandleOD*/


  String name = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
  printObject(name, "de.monticore.gettingstarted.website._ast.ASTWebsite");
  pp.indent();
  String scopeName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
  pp.println("enclosingScope = " + scopeName + ";");
  printAttribute("name", String.valueOf(node.getName()));
  if (node.isPresentNavigation()) {
    pp.print("navigation");
    pp.print(" = ");
    node.getNavigation().accept(getTraverser());
    pp.println(";");
  } else if (printEmptyOptional) {
    pp.println("navigation = absent;");
  }
  {
    Iterator<de.monticore.gettingstarted.website._ast.ASTPage> iter_pages = node.getPageList().iterator();
    boolean isEmpty = true;
    if (iter_pages.hasNext()) {
      pp.print("pages");
      pp.print(" = [");
      pp.println("// *size: " + node.getPageList().size());
      pp.indent();
      isEmpty = false;
    } else if (printEmptyList) {
      pp.print("pages");
      pp.println(" = [];");
    }
    boolean isFirst = true;
    while (iter_pages.hasNext()) {
      if (!isFirst) {
        pp.println(",");
      }
      isFirst = false;
      iter_pages.next().accept(getTraverser());
    }
    if (!isEmpty) {
      pp.println("];");
      pp.unindent();
    }
  }
  pp.unindent();
  pp.print("}");
}

    /* generated by template cd2java.Method*/
 public  void handle (de.monticore.gettingstarted.website._ast.ASTNavigation node)

 {
    /* generated by template _od.HandleOD*/


  String name = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
  printObject(name, "de.monticore.gettingstarted.website._ast.ASTNavigation");
  pp.indent();
  String scopeName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
  pp.println("enclosingScope = " + scopeName + ";");
  {
    Iterator<de.monticore.gettingstarted.website._ast.ASTNavigationItem> iter_navigationItems = node.getNavigationItemList().iterator();
    boolean isEmpty = true;
    if (iter_navigationItems.hasNext()) {
      pp.print("navigationItems");
      pp.print(" = [");
      pp.println("// *size: " + node.getNavigationItemList().size());
      pp.indent();
      isEmpty = false;
    } else if (printEmptyList) {
      pp.print("navigationItems");
      pp.println(" = [];");
    }
    boolean isFirst = true;
    while (iter_navigationItems.hasNext()) {
      if (!isFirst) {
        pp.println(",");
      }
      isFirst = false;
      iter_navigationItems.next().accept(getTraverser());
    }
    if (!isEmpty) {
      pp.println("];");
      pp.unindent();
    }
  }
  pp.unindent();
  pp.print("}");
}

    /* generated by template cd2java.Method*/
 public  void handle (de.monticore.gettingstarted.website._ast.ASTNavigationItem node)

 {
    /* generated by template _od.HandleOD*/


  String name = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
  printObject(name, "de.monticore.gettingstarted.website._ast.ASTNavigationItem");
  pp.indent();
  String scopeName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
  pp.println("enclosingScope = " + scopeName + ";");
  printAttribute("name", String.valueOf(node.getName()));
  {
    Iterator<de.monticore.gettingstarted.website._ast.ASTNavigationItem> iter_subItem = node.getSubItemList().iterator();
    boolean isEmpty = true;
    if (iter_subItem.hasNext()) {
      pp.print("subItem");
      pp.print(" = [");
      pp.println("// *size: " + node.getSubItemList().size());
      pp.indent();
      isEmpty = false;
    } else if (printEmptyList) {
      pp.print("subItem");
      pp.println(" = [];");
    }
    boolean isFirst = true;
    while (iter_subItem.hasNext()) {
      if (!isFirst) {
        pp.println(",");
      }
      isFirst = false;
      iter_subItem.next().accept(getTraverser());
    }
    if (!isEmpty) {
      pp.println("];");
      pp.unindent();
    }
  }
  pp.unindent();
  pp.print("}");
}

    /* generated by template cd2java.Method*/
 public  void handle (de.monticore.gettingstarted.website._ast.ASTPage node)

 {
    /* generated by template _od.HandleOD*/


  String name = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
  printObject(name, "de.monticore.gettingstarted.website._ast.ASTPage");
  pp.indent();
  if (node.isPresentSymbol()) {
    String symName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getSymbolNameFormatted(node.getSymbol()));
    pp.println("symbol = " + symName + ";");
  } else if (printEmptyOptional) {
    pp.println("symbol = absent;");
  }
  String scopeName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
  pp.println("enclosingScope = " + scopeName + ";");
  printAttribute("name", String.valueOf(node.getName()));
  if (node.isPresentTitle()) {
    printAttribute("title", "\"" + String.valueOf(node.getTitle()) + "\"");
  } else if (printEmptyOptional) {
    pp.println("title = absent;");
  }
  if (null != node.getPageContent()) {
    pp.print("pageContent");
    pp.print(" = ");
    node.getPageContent().accept(getTraverser());
    pp.println(";");
  }
  printAttribute("start", String.valueOf(node.isStart()));
  pp.unindent();
  pp.print("}");
}

    /* generated by template cd2java.Method*/
 public  void handle (de.monticore.gettingstarted.website._ast.ASTPageContent node)

 {
    /* generated by template _od.HandleOD*/


  String name = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
  printObject(name, "de.monticore.gettingstarted.website._ast.ASTPageContent");
  pp.indent();
  String scopeName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
  pp.println("enclosingScope = " + scopeName + ";");
  {
    Iterator<de.monticore.gettingstarted.website._ast.ASTPageContentElement> iter_pageContentElements = node.getPageContentElementList().iterator();
    boolean isEmpty = true;
    if (iter_pageContentElements.hasNext()) {
      pp.print("pageContentElements");
      pp.print(" = [");
      pp.println("// *size: " + node.getPageContentElementList().size());
      pp.indent();
      isEmpty = false;
    } else if (printEmptyList) {
      pp.print("pageContentElements");
      pp.println(" = [];");
    }
    boolean isFirst = true;
    while (iter_pageContentElements.hasNext()) {
      if (!isFirst) {
        pp.println(",");
      }
      isFirst = false;
      iter_pageContentElements.next().accept(getTraverser());
    }
    if (!isEmpty) {
      pp.println("];");
      pp.unindent();
    }
  }
  pp.unindent();
  pp.print("}");
}

    /* generated by template cd2java.Method*/
 public  void handle (de.monticore.gettingstarted.website._ast.ASTLink node)

 {
    /* generated by template _od.HandleOD*/


  String name = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
  printObject(name, "de.monticore.gettingstarted.website._ast.ASTLink");
  pp.indent();
  String scopeName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
  pp.println("enclosingScope = " + scopeName + ";");
  printAttribute("name", String.valueOf(node.getName()));
  if (node.isPresentTitle()) {
    printAttribute("title", "\"" + String.valueOf(node.getTitle()) + "\"");
  } else if (printEmptyOptional) {
    pp.println("title = absent;");
  }
  pp.unindent();
  pp.print("}");
}

    /* generated by template cd2java.Method*/
 public  void handle (de.monticore.gettingstarted.website._ast.ASTPicture node)

 {
    /* generated by template _od.HandleOD*/


  String name = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
  printObject(name, "de.monticore.gettingstarted.website._ast.ASTPicture");
  pp.indent();
  String scopeName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
  pp.println("enclosingScope = " + scopeName + ";");
  printAttribute("name", String.valueOf(node.getName()));
  if (null != node.getWidth()) {
    pp.print("width");
    pp.print(" = ");
    node.getWidth().accept(getTraverser());
    pp.println(";");
  }
  if (null != node.getHeight()) {
    pp.print("height");
    pp.print(" = ");
    node.getHeight().accept(getTraverser());
    pp.println(";");
  }
  pp.unindent();
  pp.print("}");
}

    /* generated by template cd2java.Method*/
 public  void handle (de.monticore.gettingstarted.website._ast.ASTParagraph node)

 {
    /* generated by template _od.HandleOD*/


  String name = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
  printObject(name, "de.monticore.gettingstarted.website._ast.ASTParagraph");
  pp.indent();
  String scopeName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
  pp.println("enclosingScope = " + scopeName + ";");
  printAttribute("text", String.valueOf(node.getText()));
  pp.unindent();
  pp.print("}");
}

    /* generated by template cd2java.Method*/
 public  void handle (de.monticore.gettingstarted.website._ast.ASTTextBlock node)

 {
    /* generated by template _od.HandleOD*/


  String name = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
  printObject(name, "de.monticore.gettingstarted.website._ast.ASTTextBlock");
  pp.indent();
  String scopeName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
  pp.println("enclosingScope = " + scopeName + ";");
  printAttribute("title", String.valueOf(node.getTitle()));
  {
    Iterator<de.monticore.gettingstarted.website._ast.ASTParagraph> iter_paragraphs = node.getParagraphList().iterator();
    boolean isEmpty = true;
    if (iter_paragraphs.hasNext()) {
      pp.print("paragraphs");
      pp.print(" = [");
      pp.println("// *size: " + node.getParagraphList().size());
      pp.indent();
      isEmpty = false;
    } else if (printEmptyList) {
      pp.print("paragraphs");
      pp.println(" = [];");
    }
    boolean isFirst = true;
    while (iter_paragraphs.hasNext()) {
      if (!isFirst) {
        pp.println(",");
      }
      isFirst = false;
      iter_paragraphs.next().accept(getTraverser());
    }
    if (!isEmpty) {
      pp.println("];");
      pp.unindent();
    }
  }
  pp.unindent();
  pp.print("}");
}

    /* generated by template cd2java.Method*/
 public  void handle (de.monticore.gettingstarted.website._ast.ASTCodeBlock node)

 {
    /* generated by template _od.HandleOD*/


  String name = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
  printObject(name, "de.monticore.gettingstarted.website._ast.ASTCodeBlock");
  pp.indent();
  String scopeName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
  pp.println("enclosingScope = " + scopeName + ";");
  {
    Iterator<de.monticore.gettingstarted.website._ast.ASTParagraph> iter_paragraphs = node.getParagraphList().iterator();
    boolean isEmpty = true;
    if (iter_paragraphs.hasNext()) {
      pp.print("paragraphs");
      pp.print(" = [");
      pp.println("// *size: " + node.getParagraphList().size());
      pp.indent();
      isEmpty = false;
    } else if (printEmptyList) {
      pp.print("paragraphs");
      pp.println(" = [];");
    }
    boolean isFirst = true;
    while (iter_paragraphs.hasNext()) {
      if (!isFirst) {
        pp.println(",");
      }
      isFirst = false;
      iter_paragraphs.next().accept(getTraverser());
    }
    if (!isEmpty) {
      pp.println("];");
      pp.unindent();
    }
  }
  pp.unindent();
  pp.print("}");
}

    /* generated by template cd2java.Method*/
 public  void handle (de.monticore.gettingstarted.website._ast.ASTAside node)

 {
    /* generated by template _od.HandleOD*/


  String name = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
  printObject(name, "de.monticore.gettingstarted.website._ast.ASTAside");
  pp.indent();
  String scopeName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
  pp.println("enclosingScope = " + scopeName + ";");
  {
    Iterator<de.monticore.gettingstarted.website._ast.ASTPageContentElement> iter_subItem = node.getSubItemList().iterator();
    boolean isEmpty = true;
    if (iter_subItem.hasNext()) {
      pp.print("subItem");
      pp.print(" = [");
      pp.println("// *size: " + node.getSubItemList().size());
      pp.indent();
      isEmpty = false;
    } else if (printEmptyList) {
      pp.print("subItem");
      pp.println(" = [];");
    }
    boolean isFirst = true;
    while (iter_subItem.hasNext()) {
      if (!isFirst) {
        pp.println(",");
      }
      isFirst = false;
      iter_subItem.next().accept(getTraverser());
    }
    if (!isEmpty) {
      pp.println("];");
      pp.unindent();
    }
  }
  pp.unindent();
  pp.print("}");
}

    /* generated by template cd2java.Method*/
 public  void handle (de.monticore.gettingstarted.website._ast.ASTRow node)

 {
    /* generated by template _od.HandleOD*/


  String name = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
  printObject(name, "de.monticore.gettingstarted.website._ast.ASTRow");
  pp.indent();
  String scopeName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
  pp.println("enclosingScope = " + scopeName + ";");
  {
    Iterator<de.monticore.gettingstarted.website._ast.ASTPageContentElement> iter_pageContentElements = node.getPageContentElementList().iterator();
    boolean isEmpty = true;
    if (iter_pageContentElements.hasNext()) {
      pp.print("pageContentElements");
      pp.print(" = [");
      pp.println("// *size: " + node.getPageContentElementList().size());
      pp.indent();
      isEmpty = false;
    } else if (printEmptyList) {
      pp.print("pageContentElements");
      pp.println(" = [];");
    }
    boolean isFirst = true;
    while (iter_pageContentElements.hasNext()) {
      if (!isFirst) {
        pp.println(",");
      }
      isFirst = false;
      iter_pageContentElements.next().accept(getTraverser());
    }
    if (!isEmpty) {
      pp.println("];");
      pp.unindent();
    }
  }
  pp.unindent();
  pp.print("}");
}

    /* generated by template cd2java.Method*/
 public  void handle (de.monticore.gettingstarted.website._ast.ASTLandImage node)

 {
    /* generated by template _od.HandleOD*/


  String name = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
  printObject(name, "de.monticore.gettingstarted.website._ast.ASTLandImage");
  pp.indent();
  String scopeName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
  pp.println("enclosingScope = " + scopeName + ";");
  printAttribute("title", String.valueOf(node.getTitle()));
  printAttribute("subtitle", String.valueOf(node.getSubtitle()));
  printAttribute("picture", String.valueOf(node.getPicture()));
  pp.unindent();
  pp.print("}");
}

    /* generated by template cd2java.Method*/
 public  void handle (de.monticore.gettingstarted.website._ast.ASTCard node)

 {
    /* generated by template _od.HandleOD*/


  String name = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
  printObject(name, "de.monticore.gettingstarted.website._ast.ASTCard");
  pp.indent();
  String scopeName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
  pp.println("enclosingScope = " + scopeName + ";");
  printAttribute("title", String.valueOf(node.getTitle()));
  printAttribute("picture", String.valueOf(node.getPicture()));
  if (null != node.getParagraph()) {
    pp.print("paragraph");
    pp.print(" = ");
    node.getParagraph().accept(getTraverser());
    pp.println(";");
  }
  printAttribute("link", String.valueOf(node.getLink()));
  pp.unindent();
  pp.print("}");
}

    /* generated by template cd2java.Method*/
 public  void handle (de.monticore.gettingstarted.website._ast.ASTTable node)

 {
    /* generated by template _od.HandleOD*/


  String name = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getASTNodeNameFormatted(node));
  printObject(name, "de.monticore.gettingstarted.website._ast.ASTTable");
  pp.indent();
  String scopeName = de.se_rwth.commons.StringTransformations.uncapitalize(reporting.getScopeNameFormatted(node.getEnclosingScope()));
  pp.println("enclosingScope = " + scopeName + ";");
  printAttribute("title", String.valueOf(node.getTitle()));
  printAttribute("fileName", String.valueOf(node.getFileName()));
  pp.unindent();
  pp.print("}");
}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._visitor.WebsiteTraverser getTraverser ()

 {
    /* generated by template methods.Get*/

return this.traverser;

}

    /* generated by template cd2java.Method*/
 public  void setTraverser (de.monticore.gettingstarted.website._visitor.WebsiteTraverser traverser)

 {
    /* generated by template methods.Set*/

this.traverser = traverser;

}

    /* generated by template cd2java.Method*/
 protected  void printAttribute (String name,String value)

 {
    /* generated by template _od.PrintAttribute*/
  pp.print(name);
  pp.print(" = ");
  pp.print(value);
  pp.println(";");
}

    /* generated by template cd2java.Method*/
 protected  void printObject (String objName,String objType)

 {
    /* generated by template _od.PrintObject*/
pp.print(objName);
pp.print(":");
pp.print(de.se_rwth.commons.Names.getSimpleName(objType));
pp.println(" {");
}

    /* generated by template cd2java.Method*/
 public  String printObjectDiagram (String modelName,de.monticore.gettingstarted.website._ast.ASTWebsiteNode node)

 {
    /* generated by template _od.PrintObjectDiagram*/
  pp.clearBuffer();
  pp.setIndentLength(2);
  pp.print("objectdiagram ");
  pp.print(modelName);
  pp.println(" {");
  pp.indent();
  node.accept(getTraverser());
  pp.print(";");
  pp.unindent();
  pp.println("}");
  return pp.getContent();
}

    /* generated by template cd2java.Method*/
 public  boolean isPrintEmptyOptional ()

 {
    /* generated by template methods.Get*/

return this.printEmptyOptional;

}

    /* generated by template cd2java.Method*/
 public  void setPrintEmptyOptional (boolean printEmptyOptional)

 {
    /* generated by template methods.Set*/

this.printEmptyOptional = printEmptyOptional;

}

    /* generated by template cd2java.Method*/
 public  boolean isPrintEmptyList ()

 {
    /* generated by template methods.Get*/

return this.printEmptyList;

}

    /* generated by template cd2java.Method*/
 public  void setPrintEmptyList (boolean printEmptyList)

 {
    /* generated by template methods.Set*/

this.printEmptyList = printEmptyList;

}


}



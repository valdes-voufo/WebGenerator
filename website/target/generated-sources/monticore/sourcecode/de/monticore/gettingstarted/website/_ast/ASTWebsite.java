/* generated from model Website */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package de.monticore.gettingstarted.website._ast;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;

import de.monticore.ast.ASTCNode;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;


/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class ASTWebsite extends ASTCNode  implements de.monticore.gettingstarted.website._ast.ASTWebsiteNode {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  String name
  
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  Optional<de.monticore.gettingstarted.website._ast.ASTNavigation> navigation
  = Optional.empty()
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<de.monticore.gettingstarted.website._ast.ASTPage> pages
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.gettingstarted.website._symboltable.IWebsiteScope enclosingScope
  
;


    /* generated by template cd2java.Constructor*/
 protected  ASTWebsite()
 {
  /* generated by template cd2java.EmptyBody*/
// empty body

}


    /* generated by template cd2java.Method*/
 public  boolean deepEquals (Object o)

 {
         return deepEquals(o, true);
}

    /* generated by template cd2java.Method*/
 public  boolean deepEquals (Object o,boolean forceSameOrder)

 {
    /* generated by template data.DeepEqualsWithOrder*/

      ASTWebsite comp;
    if ((o instanceof ASTWebsite)) {
      comp = (ASTWebsite) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing navigation   
    if ( this.navigation.isPresent() != comp.navigation.isPresent() ||
      (this.navigation.isPresent() && !this.navigation.get().deepEquals(comp.navigation.get(), forceSameOrder)) ) {
      return false;
    }
    // comparing pages
    if (this.pages.size() != comp.pages.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<de.monticore.gettingstarted.website._ast.ASTPage> it1 = this.pages.iterator();
        Iterator<de.monticore.gettingstarted.website._ast.ASTPage> it2 = comp.pages.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEquals(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<de.monticore.gettingstarted.website._ast.ASTPage> it1 = this.pages.iterator();
        while (it1.hasNext()) {
          de.monticore.gettingstarted.website._ast.ASTPage oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<de.monticore.gettingstarted.website._ast.ASTPage> it2 = comp.pages.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEquals(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
    return true;     


}

    /* generated by template cd2java.Method*/
 public  boolean deepEqualsWithComments (Object o)

 {
         return deepEqualsWithComments(o, true);
}

    /* generated by template cd2java.Method*/
 public  boolean deepEqualsWithComments (Object o,boolean forceSameOrder)

 {
    /* generated by template data.DeepEqualsWithComments*/

      ASTWebsite comp;
    if ((o instanceof ASTWebsite)) {
      comp = (ASTWebsite) o;
    } else {
      return false;
    }
    if (!equalsWithComments(comp)) {
      return false;
    }
    // comparing navigation
    if ( this.navigation.isPresent() != comp.navigation.isPresent() ||
      (this.navigation.isPresent() && !this.navigation.get().deepEqualsWithComments(comp.navigation.get(), forceSameOrder)) ) {
      return false;
    }
    // comparing pages
    if (this.pages.size() != comp.pages.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<de.monticore.gettingstarted.website._ast.ASTPage> it1 = this.pages.iterator();
        Iterator<de.monticore.gettingstarted.website._ast.ASTPage> it2 = comp.pages.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEqualsWithComments(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<de.monticore.gettingstarted.website._ast.ASTPage> it1 = this.pages.iterator();
        while (it1.hasNext()) {
          de.monticore.gettingstarted.website._ast.ASTPage oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<de.monticore.gettingstarted.website._ast.ASTPage> it2 = comp.pages.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEqualsWithComments(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
    return true;     

}

    /* generated by template cd2java.Method*/
 public  boolean equalAttributes (Object o)

 {
    /* generated by template data.EqualAttributes*/

      ASTWebsite comp;
    if ((o instanceof ASTWebsite)) {
      comp = (ASTWebsite) o;
    } else {
      return false;
    }
	// comparing name 
    if ( (this.name == null && comp.name != null) 
      || (this.name != null && !this.name.equals(comp.name)) ) {
      return false;
    }
    return true;


}

    /* generated by template cd2java.Method*/
 public  boolean equalsWithComments (Object o)

 {
    /* generated by template data.EqualsWithComments*/

      ASTWebsite comp;
    if ((o instanceof ASTWebsite)) {
      comp = (ASTWebsite) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing comments
    if (get_PreCommentList().size() == comp.get_PreCommentList().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PreCommentList().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PreCommentList().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    
    if (get_PostCommentList().size() == comp.get_PostCommentList().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PostCommentList().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PostCommentList().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    return true;

}

    /* generated by template cd2java.Method*/
 public  ASTWebsite deepClone ()

 {
        return deepClone(_construct());
}

    /* generated by template cd2java.Method*/
 public  ASTWebsite deepClone (ASTWebsite result)

 {
    /* generated by template data.DeepCloneWithParameters*/


  result.set_SourcePositionStart(get_SourcePositionStart().clone());
  result.set_SourcePositionEnd(get_SourcePositionEnd().clone());
  for (de.monticore.ast.Comment x : get_PreCommentList()) {
    result.get_PreCommentList().add(new de.monticore.ast.Comment(x.getText()));
  }
  for (de.monticore.ast.Comment x : get_PostCommentList()) {
    result.get_PostCommentList().add(new de.monticore.ast.Comment(x.getText()));
  }

      result.setName(getName());
    if (isPresentNavigation()){
      result.setNavigation(getNavigation().deepClone());
    } else {
      result.setNavigationAbsent();
    }
      getPageList().forEach(s -> result.pages.add(s.deepClone()));
    
    return result;

}

    /* generated by template cd2java.Method*/
 public  String getName ()

 {
    /* generated by template methods.Get*/

return this.name;

}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._ast.ASTNavigation getNavigation ()

 {
    /* generated by template methods.opt.Get4Opt*/

    if (isPresentNavigation()) {
        return this.navigation.get();
    }
    Log.error("0xA7003x12977 get for Navigation can't return a value. Attribute is empty.");
    // Normally this statement is not reachable
    throw new IllegalStateException();

}

    /* generated by template cd2java.Method*/
 public  boolean isPresentNavigation ()

 {
    /* generated by template methods.opt.IsPresent4Opt*/

return this.navigation.isPresent();

}

    /* generated by template cd2java.Method*/
 public  boolean containsPage (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().contains(element);

}

    /* generated by template cd2java.Method*/
 public  boolean containsAllPages (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().containsAll(collection);

}

    /* generated by template cd2java.Method*/
 public  boolean isEmptyPages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().isEmpty();

}

    /* generated by template cd2java.Method*/
 public  Iterator<de.monticore.gettingstarted.website._ast.ASTPage> iteratorPages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().iterator();

}

    /* generated by template cd2java.Method*/
 public  int sizePages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().size();

}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._ast.ASTPage[] toArrayPages (de.monticore.gettingstarted.website._ast.ASTPage[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().toArray(array);

}

    /* generated by template cd2java.Method*/
 public  Object[] toArrayPages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().toArray();

}

    /* generated by template cd2java.Method*/
 public  Spliterator<de.monticore.gettingstarted.website._ast.ASTPage> spliteratorPages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().spliterator();

}

    /* generated by template cd2java.Method*/
 public  Stream<de.monticore.gettingstarted.website._ast.ASTPage> streamPages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().stream();

}

    /* generated by template cd2java.Method*/
 public  Stream<de.monticore.gettingstarted.website._ast.ASTPage> parallelStreamPages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().parallelStream();

}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._ast.ASTPage getPage (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().get(index);

}

    /* generated by template cd2java.Method*/
 public  int indexOfPage (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().indexOf(element);

}

    /* generated by template cd2java.Method*/
 public  int lastIndexOfPage (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/
 public  boolean equalsPages (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().equals(o);

}

    /* generated by template cd2java.Method*/
 public  int hashCodePages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().hashCode();

}

    /* generated by template cd2java.Method*/
 public  ListIterator<de.monticore.gettingstarted.website._ast.ASTPage> listIteratorPages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().listIterator();

}

    /* generated by template cd2java.Method*/
 public  ListIterator<de.monticore.gettingstarted.website._ast.ASTPage> listIteratorPages (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().listIterator(index);

}

    /* generated by template cd2java.Method*/
 public  List<de.monticore.gettingstarted.website._ast.ASTPage> subListPages (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().subList(start, end);

}

    /* generated by template cd2java.Method*/
 public  List<de.monticore.gettingstarted.website._ast.ASTPage> getPageList ()

 {
    /* generated by template methods.Get*/

return this.pages;

}

    /* generated by template cd2java.Method*/
 public  void setName (String name)

 {
    /* generated by template methods.Set*/

this.name = name;

}

    /* generated by template cd2java.Method*/
 public  void setNavigation (de.monticore.gettingstarted.website._ast.ASTNavigation navigation)

 {
    /* generated by template methods.opt.Set4Opt*/

this.navigation = Optional.ofNullable(navigation);

}

    /* generated by template cd2java.Method*/
 public  void setNavigationAbsent ()

 {
    /* generated by template methods.opt.SetAbsent*/

this.navigation = Optional.empty();

}

    /* generated by template cd2java.Method*/
 public  void clearPages ()

 {
    /* generated by template methods.MethodDelegate*/

this.getPageList().clear();

}

    /* generated by template cd2java.Method*/
 public  boolean addPage (de.monticore.gettingstarted.website._ast.ASTPage element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().add(element);

}

    /* generated by template cd2java.Method*/
 public  boolean addAllPages (Collection<? extends de.monticore.gettingstarted.website._ast.ASTPage> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().addAll(collection);

}

    /* generated by template cd2java.Method*/
 public  boolean removePage (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().remove(element);

}

    /* generated by template cd2java.Method*/
 public  boolean removeAllPages (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().removeAll(collection);

}

    /* generated by template cd2java.Method*/
 public  boolean retainAllPages (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().retainAll(collection);

}

    /* generated by template cd2java.Method*/
 public  boolean removeIfPage (Predicate<? super de.monticore.gettingstarted.website._ast.ASTPage> filter)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().removeIf(filter);

}

    /* generated by template cd2java.Method*/
 public  void forEachPages (Consumer<? super de.monticore.gettingstarted.website._ast.ASTPage> action)

 {
    /* generated by template methods.MethodDelegate*/

this.getPageList().forEach(action);

}

    /* generated by template cd2java.Method*/
 public  void addPage (int index,de.monticore.gettingstarted.website._ast.ASTPage element)

 {
    /* generated by template methods.MethodDelegate*/

this.getPageList().add(index, element);

}

    /* generated by template cd2java.Method*/
 public  boolean addAllPages (int index,Collection<? extends de.monticore.gettingstarted.website._ast.ASTPage> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().addAll(index, collection);

}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._ast.ASTPage removePage (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().remove(index);

}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._ast.ASTPage setPage (int index,de.monticore.gettingstarted.website._ast.ASTPage element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPageList().set(index, element);

}

    /* generated by template cd2java.Method*/
 public  void replaceAllPages (UnaryOperator<de.monticore.gettingstarted.website._ast.ASTPage> operator)

 {
    /* generated by template methods.MethodDelegate*/

this.getPageList().replaceAll(operator);

}

    /* generated by template cd2java.Method*/
 public  void sortPages (Comparator<? super de.monticore.gettingstarted.website._ast.ASTPage> comparator)

 {
    /* generated by template methods.MethodDelegate*/

this.getPageList().sort(comparator);

}

    /* generated by template cd2java.Method*/
 public  void setPageList (List<de.monticore.gettingstarted.website._ast.ASTPage> pages)

 {
    /* generated by template methods.Set*/

this.pages = pages;

}

    /* generated by template cd2java.Method*/
 public  void accept (de.monticore.gettingstarted.website._visitor.WebsiteTraverser visitor)

 {
    /* generated by template _ast.ast_class.Accept*/

      visitor.handle(this);

}

    /* generated by template cd2java.Method*/
 public  void accept (de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof de.monticore.gettingstarted.website._visitor.WebsiteTraverser) {
    accept((de.monticore.gettingstarted.website._visitor.WebsiteTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x15886 AST node type ASTWebsite expected a visitor of type de.monticore.gettingstarted.website._visitor.WebsiteTraverser, but got de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/
 public  void accept (de.monticore.mcbasics._visitor.MCBasicsTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof de.monticore.gettingstarted.website._visitor.WebsiteTraverser) {
    accept((de.monticore.gettingstarted.website._visitor.WebsiteTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x56070 AST node type ASTWebsite expected a visitor of type de.monticore.gettingstarted.website._visitor.WebsiteTraverser, but got de.monticore.mcbasics._visitor.MCBasicsTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/
 public  void accept (de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof de.monticore.gettingstarted.website._visitor.WebsiteTraverser) {
    accept((de.monticore.gettingstarted.website._visitor.WebsiteTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x19994 AST node type ASTWebsite expected a visitor of type de.monticore.gettingstarted.website._visitor.WebsiteTraverser, but got de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/
 public  void accept (de.monticore.visitor.ITraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof de.monticore.gettingstarted.website._visitor.WebsiteTraverser) {
    accept((de.monticore.gettingstarted.website._visitor.WebsiteTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x05482 AST node type ASTWebsite expected a visitor of type de.monticore.gettingstarted.website._visitor.WebsiteTraverser, but got de.monticore.visitor.ITraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/
 protected  ASTWebsite _construct ()

 {
    return de.monticore.gettingstarted.website.WebsiteMill.websiteBuilder().uncheckedBuild();
}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._symboltable.IWebsiteScope getEnclosingScope ()

 {
    /* generated by template methods.Get*/

return this.enclosingScope;

}

    /* generated by template cd2java.Method*/
 public  void setEnclosingScope (de.monticore.gettingstarted.website._symboltable.IWebsiteScope enclosingScope)

 {
    /* generated by template methods.Set*/

this.enclosingScope = enclosingScope;

}

    /* generated by template cd2java.Method*/
 public  void setEnclosingScope (de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof de.monticore.gettingstarted.website._symboltable.IWebsiteScope){
    this.enclosingScope = (de.monticore.gettingstarted.website._symboltable.IWebsiteScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x25032 The EnclosingScope form type de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope could not be casted to the type de.monticore.gettingstarted.website._symboltable.IWebsiteScope. Please call the Method setEnclosingScope with a parameter form type de.monticore.gettingstarted.website._symboltable.IWebsiteScope");
  }
}

    /* generated by template cd2java.Method*/
 public  void setEnclosingScope (de.monticore.mcbasics._symboltable.IMCBasicsScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof de.monticore.gettingstarted.website._symboltable.IWebsiteScope){
    this.enclosingScope = (de.monticore.gettingstarted.website._symboltable.IWebsiteScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x25032 The EnclosingScope form type de.monticore.mcbasics._symboltable.IMCBasicsScope could not be casted to the type de.monticore.gettingstarted.website._symboltable.IWebsiteScope. Please call the Method setEnclosingScope with a parameter form type de.monticore.gettingstarted.website._symboltable.IWebsiteScope");
  }
}

    /* generated by template cd2java.Method*/
 public  void setEnclosingScope (de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof de.monticore.gettingstarted.website._symboltable.IWebsiteScope){
    this.enclosingScope = (de.monticore.gettingstarted.website._symboltable.IWebsiteScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x25032 The EnclosingScope form type de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope could not be casted to the type de.monticore.gettingstarted.website._symboltable.IWebsiteScope. Please call the Method setEnclosingScope with a parameter form type de.monticore.gettingstarted.website._symboltable.IWebsiteScope");
  }
}


}



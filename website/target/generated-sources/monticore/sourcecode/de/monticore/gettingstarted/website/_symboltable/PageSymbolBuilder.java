/* generated from model Website */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package de.monticore.gettingstarted.website._symboltable;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;



/* Hookpoint: ClassContent:Imports */

/* generated by template cd2java.Annotations*/
// empty template: no Annotation


/* Hookpoint: ClassContent:Annotations */

 public  class PageSymbolBuilder  {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  PageSymbolBuilder realBuilder
  
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  String name
  
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  String fullName
  
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  String packageName
  
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  Optional<de.monticore.gettingstarted.website._ast.ASTPage> astNode
  = Optional.empty()
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.symboltable.modifiers.AccessModifier accessModifier
  
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.gettingstarted.website._symboltable.IWebsiteScope enclosingScope
  
;


    /* generated by template cd2java.Constructor*/
 public  PageSymbolBuilder()
 {
  this.realBuilder = (PageSymbolBuilder) this;
}


    /* generated by template cd2java.Method*/
 public  PageSymbol build ()

 {
    /* generated by template _symboltable.symbol.BuildSymbol*/

PageSymbol symbol = new PageSymbol(name);
  symbol.setName(this.name);
  symbol.setFullName(this.fullName);
  symbol.setPackageName(this.packageName);
  if (this.astNode.isPresent()) {
    symbol.setAstNode(this.astNode.get());
  } else {
    symbol.setAstNodeAbsent();
  }
  symbol.setAccessModifier(this.accessModifier);
  symbol.setEnclosingScope(this.enclosingScope);
  symbol.setName(this.name);
  symbol.setFullName(this.fullName);
  symbol.setPackageName(this.packageName);
  if (this.astNode.isPresent()) {
    symbol.setAstNode(this.astNode.get());
  } else {
    symbol.setAstNodeAbsent();
  }
  symbol.setAccessModifier(this.accessModifier);
  symbol.setEnclosingScope(this.enclosingScope);
return symbol;

}

    /* generated by template cd2java.Method*/
 public  boolean isValid ()

 {
    /* generated by template _ast.builder.IsValidMethod*/

        if (name == null) {
            return false;
        }
        if (fullName == null) {
            return false;
        }
        if (packageName == null) {
            return false;
        }
        if (accessModifier == null) {
            return false;
        }
        if (enclosingScope == null) {
            return false;
        }
        return true;

}

    /* generated by template cd2java.Method*/
 public  String getName ()

 {
    /* generated by template methods.Get*/

return this.name;

}

    /* generated by template cd2java.Method*/
 public  String getFullName ()

 {
    /* generated by template methods.Get*/

return this.fullName;

}

    /* generated by template cd2java.Method*/
 public  String getPackageName ()

 {
    /* generated by template methods.Get*/

return this.packageName;

}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._ast.ASTPage getAstNode ()

 {
    /* generated by template methods.opt.Get4Opt*/

    if (isPresentAstNode()) {
        return this.astNode.get();
    }
    Log.error("0xA7003x79036 get for AstNode can't return a value. Attribute is empty.");
    // Normally this statement is not reachable
    throw new IllegalStateException();

}

    /* generated by template cd2java.Method*/
 public  boolean isPresentAstNode ()

 {
    /* generated by template methods.opt.IsPresent4Opt*/

return this.astNode.isPresent();

}

    /* generated by template cd2java.Method*/
 public  de.monticore.symboltable.modifiers.AccessModifier getAccessModifier ()

 {
    /* generated by template methods.Get*/

return this.accessModifier;

}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._symboltable.IWebsiteScope getEnclosingScope ()

 {
    /* generated by template methods.Get*/

return this.enclosingScope;

}

    /* generated by template cd2java.Method*/
 public  PageSymbolBuilder setName (String name)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.name = name;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  PageSymbolBuilder setFullName (String fullName)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.fullName = fullName;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  PageSymbolBuilder setPackageName (String packageName)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.packageName = packageName;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  PageSymbolBuilder setAstNode (de.monticore.gettingstarted.website._ast.ASTPage astNode)

 {
    /* generated by template _ast.builder.opt.Set4ASTBuilderOpt*/

    this.astNode = Optional.ofNullable(astNode);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  PageSymbolBuilder setAstNodeAbsent ()

 {
    /* generated by template _ast.builder.opt.SetAbsent4ASTBuilderOpt*/

    this.astNode = Optional.empty();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  PageSymbolBuilder setAccessModifier (de.monticore.symboltable.modifiers.AccessModifier accessModifier)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.accessModifier = accessModifier;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  PageSymbolBuilder setEnclosingScope (de.monticore.gettingstarted.website._symboltable.IWebsiteScope enclosingScope)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.enclosingScope = enclosingScope;
    return this.realBuilder;

}


}



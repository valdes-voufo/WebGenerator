/* generated by template parser.ParserInfo*/

package de.monticore.gettingstarted.website._parser;

import java.util.*;
import de.monticore.gettingstarted.website._parser._auxiliary.WebsiteParserInfoForMCCommonLiterals;
import de.monticore.gettingstarted.website._parser._auxiliary.WebsiteParserInfoForMCBasics;
import de.monticore.gettingstarted.website._parser._auxiliary.WebsiteParserInfoForMCLiteralsBasis;
import de.monticore.literals.mccommonliterals._parser.MCCommonLiteralsParserInfo;
import de.monticore.mcbasics._parser.MCBasicsParserInfo;
import de.monticore.literals.mcliteralsbasis._parser.MCLiteralsBasisParserInfo;

public class WebsiteParserInfo {
  // References

  // Usage names
  protected static Set<Integer> statesWithUsageNameSource = new HashSet<>(Arrays.asList( 82, 85 ));
  protected static Set<Integer> statesWithUsageNameDigits = new HashSet<>(Arrays.asList( 88, 95, 97, 102, 113, 121 ));
  protected static Set<Integer> statesWithUsageNamePre = new HashSet<>(Arrays.asList( 131, 146, 158, 172, 183, 190 ));
  protected static Set<Integer> statesWithUsageNamePost = new HashSet<>(Arrays.asList( 135, 150, 162, 176, 187, 194 ));
  protected static Set<Integer> statesWithUsageNameName = new HashSet<>(Arrays.asList( 199, 228, 249, 276, 286 ));
  protected static Set<Integer> statesWithUsageNameNavigation = Collections.emptySet();
  protected static Set<Integer> statesWithUsageNamePage = Collections.emptySet();
  protected static Set<Integer> statesWithUsageNameNavigationItem = Collections.emptySet();
  protected static Set<Integer> statesWithUsageNameSubItem = Collections.emptySet();
  protected static Set<Integer> statesWithUsageNameTitle = new HashSet<>(Arrays.asList( 253, 279, 305, 354, 369, 383 ));
  protected static Set<Integer> statesWithUsageNamePageContent = Collections.emptySet();
  protected static Set<Integer> statesWithUsageNamePageContentElement = Collections.emptySet();
  protected static Set<Integer> statesWithUsageNameWidth = Collections.emptySet();
  protected static Set<Integer> statesWithUsageNameHeight = Collections.emptySet();
  protected static Set<Integer> statesWithUsageNameText = new HashSet<>(Arrays.asList( 298 ));
  protected static Set<Integer> statesWithUsageNameParagraph = Collections.emptySet();
  protected static Set<Integer> statesWithUsageNameSubtitle = new HashSet<>(Arrays.asList( 358 ));
  protected static Set<Integer> statesWithUsageNamePicture = new HashSet<>(Arrays.asList( 362, 372 ));
  protected static Set<Integer> statesWithUsageNameLink = new HashSet<>(Arrays.asList( 377 ));
  protected static Set<Integer> statesWithUsageNameFileName = new HashSet<>(Arrays.asList( 386 ));

  // Named defining
  protected static Set<Integer> statesDefiningName = new HashSet<>(Arrays.asList( 249 ));
  protected static WebsiteParserInfo delegate;

  protected static WebsiteParserInfo getDelegate(){
      if(delegate == null){
        init();
      }
      return delegate;
  }


  public static void init(){
    delegate = new WebsiteParserInfo();
    MCCommonLiteralsParserInfo.initMe(new WebsiteParserInfoForMCCommonLiterals());
    MCBasicsParserInfo.initMe(new WebsiteParserInfoForMCBasics());
    MCLiteralsBasisParserInfo.initMe(new WebsiteParserInfoForMCLiteralsBasis());
  }

  public static void initMe(WebsiteParserInfo _delegate){
    delegate = _delegate;
  }

  public static boolean stateHasUsageNameSource(int state){
    return getDelegate()._stateHasUsageNameSource(state);
  }

  protected boolean _stateHasUsageNameSource(int state){
    return statesWithUsageNameSource.contains(state);
  }

  public static boolean stateHasUsageNameDigits(int state){
    return getDelegate()._stateHasUsageNameDigits(state);
  }

  protected boolean _stateHasUsageNameDigits(int state){
    return statesWithUsageNameDigits.contains(state);
  }

  public static boolean stateHasUsageNamePre(int state){
    return getDelegate()._stateHasUsageNamePre(state);
  }

  protected boolean _stateHasUsageNamePre(int state){
    return statesWithUsageNamePre.contains(state);
  }

  public static boolean stateHasUsageNamePost(int state){
    return getDelegate()._stateHasUsageNamePost(state);
  }

  protected boolean _stateHasUsageNamePost(int state){
    return statesWithUsageNamePost.contains(state);
  }

  public static boolean stateHasUsageNameName(int state){
    return getDelegate()._stateHasUsageNameName(state);
  }

  protected boolean _stateHasUsageNameName(int state){
    return statesWithUsageNameName.contains(state);
  }

  public static boolean stateHasUsageNameNavigation(int state){
    return getDelegate()._stateHasUsageNameNavigation(state);
  }

  protected boolean _stateHasUsageNameNavigation(int state){
    return statesWithUsageNameNavigation.contains(state);
  }

  public static boolean stateHasUsageNamePage(int state){
    return getDelegate()._stateHasUsageNamePage(state);
  }

  protected boolean _stateHasUsageNamePage(int state){
    return statesWithUsageNamePage.contains(state);
  }

  public static boolean stateHasUsageNameNavigationItem(int state){
    return getDelegate()._stateHasUsageNameNavigationItem(state);
  }

  protected boolean _stateHasUsageNameNavigationItem(int state){
    return statesWithUsageNameNavigationItem.contains(state);
  }

  public static boolean stateHasUsageNameSubItem(int state){
    return getDelegate()._stateHasUsageNameSubItem(state);
  }

  protected boolean _stateHasUsageNameSubItem(int state){
    return statesWithUsageNameSubItem.contains(state);
  }

  public static boolean stateHasUsageNameTitle(int state){
    return getDelegate()._stateHasUsageNameTitle(state);
  }

  protected boolean _stateHasUsageNameTitle(int state){
    return statesWithUsageNameTitle.contains(state);
  }

  public static boolean stateHasUsageNamePageContent(int state){
    return getDelegate()._stateHasUsageNamePageContent(state);
  }

  protected boolean _stateHasUsageNamePageContent(int state){
    return statesWithUsageNamePageContent.contains(state);
  }

  public static boolean stateHasUsageNamePageContentElement(int state){
    return getDelegate()._stateHasUsageNamePageContentElement(state);
  }

  protected boolean _stateHasUsageNamePageContentElement(int state){
    return statesWithUsageNamePageContentElement.contains(state);
  }

  public static boolean stateHasUsageNameWidth(int state){
    return getDelegate()._stateHasUsageNameWidth(state);
  }

  protected boolean _stateHasUsageNameWidth(int state){
    return statesWithUsageNameWidth.contains(state);
  }

  public static boolean stateHasUsageNameHeight(int state){
    return getDelegate()._stateHasUsageNameHeight(state);
  }

  protected boolean _stateHasUsageNameHeight(int state){
    return statesWithUsageNameHeight.contains(state);
  }

  public static boolean stateHasUsageNameText(int state){
    return getDelegate()._stateHasUsageNameText(state);
  }

  protected boolean _stateHasUsageNameText(int state){
    return statesWithUsageNameText.contains(state);
  }

  public static boolean stateHasUsageNameParagraph(int state){
    return getDelegate()._stateHasUsageNameParagraph(state);
  }

  protected boolean _stateHasUsageNameParagraph(int state){
    return statesWithUsageNameParagraph.contains(state);
  }

  public static boolean stateHasUsageNameSubtitle(int state){
    return getDelegate()._stateHasUsageNameSubtitle(state);
  }

  protected boolean _stateHasUsageNameSubtitle(int state){
    return statesWithUsageNameSubtitle.contains(state);
  }

  public static boolean stateHasUsageNamePicture(int state){
    return getDelegate()._stateHasUsageNamePicture(state);
  }

  protected boolean _stateHasUsageNamePicture(int state){
    return statesWithUsageNamePicture.contains(state);
  }

  public static boolean stateHasUsageNameLink(int state){
    return getDelegate()._stateHasUsageNameLink(state);
  }

  protected boolean _stateHasUsageNameLink(int state){
    return statesWithUsageNameLink.contains(state);
  }

  public static boolean stateHasUsageNameFileName(int state){
    return getDelegate()._stateHasUsageNameFileName(state);
  }

  protected boolean _stateHasUsageNameFileName(int state){
    return statesWithUsageNameFileName.contains(state);
  }

  public static boolean stateDefinesName(int state){
    return getDelegate()._stateDefinesName(state);
  }

  protected boolean _stateDefinesName(int state){
    return statesDefiningName.contains(state);
  }
}

/* generated from model Website */
/* generated by template cd2java.Interface*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: InterfaceContent:addComment */

/* generated by template cd2java.Package*/
package de.monticore.gettingstarted.website._symboltable;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;



/* Hookpoint: InterfaceContent:Imports */

/* generated by template cd2java.Annotations*/
// empty template: no Annotation


/* Hookpoint: InterfaceContent:Annotations */

 public  interface IWebsiteGlobalScope extends de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsGlobalScope,de.monticore.gettingstarted.website._symboltable.IWebsiteScope  { 
/* Hookpoint: InterfaceContent:Elements */


  default /* generated by template cd2java.Method*/
 public  Set<String> calculateModelNamesForPage (String name)

 {
    /* generated by template _symboltable.iglobalscope.CalculateModelNamesFor*/
  HashSet<String> names = new HashSet<>();
  names.add(name);

  if (name.contains(".")) {
    names.add(de.se_rwth.commons.Names.getQualifier(name));
  }

  return names;
}

  default /* generated by template cd2java.Method*/
 public  boolean containsAdaptedPageSymbolResolver (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().contains(element);

}

  default /* generated by template cd2java.Method*/
 public  boolean containsAllAdaptedPageSymbolResolver (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().containsAll(collection);

}

  default /* generated by template cd2java.Method*/
 public  boolean isEmptyAdaptedPageSymbolResolver ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().isEmpty();

}

  default /* generated by template cd2java.Method*/
 public  Iterator<de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver> iteratorAdaptedPageSymbolResolver ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().iterator();

}

  default /* generated by template cd2java.Method*/
 public  int sizeAdaptedPageSymbolResolver ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().size();

}

  default /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver[] toArrayAdaptedPageSymbolResolver (de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().toArray(array);

}

  default /* generated by template cd2java.Method*/
 public  Object[] toArrayAdaptedPageSymbolResolver ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().toArray();

}

  default /* generated by template cd2java.Method*/
 public  Spliterator<de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver> spliteratorAdaptedPageSymbolResolver ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().spliterator();

}

  default /* generated by template cd2java.Method*/
 public  Stream<de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver> streamAdaptedPageSymbolResolver ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().stream();

}

  default /* generated by template cd2java.Method*/
 public  Stream<de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver> parallelStreamAdaptedPageSymbolResolver ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().parallelStream();

}

  default /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver getAdaptedPageSymbolResolver (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().get(index);

}

  default /* generated by template cd2java.Method*/
 public  int indexOfAdaptedPageSymbolResolver (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().indexOf(element);

}

  default /* generated by template cd2java.Method*/
 public  int lastIndexOfAdaptedPageSymbolResolver (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().lastIndexOf(element);

}

  default /* generated by template cd2java.Method*/
 public  boolean equalsAdaptedPageSymbolResolver (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().equals(o);

}

  default /* generated by template cd2java.Method*/
 public  int hashCodeAdaptedPageSymbolResolver ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().hashCode();

}

  default /* generated by template cd2java.Method*/
 public  ListIterator<de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver> listIteratorAdaptedPageSymbolResolver ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().listIterator();

}

  default /* generated by template cd2java.Method*/
 public  ListIterator<de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver> listIteratorAdaptedPageSymbolResolver (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().listIterator(index);

}

  default /* generated by template cd2java.Method*/
 public  List<de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver> subListAdaptedPageSymbolResolver (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().subList(start, end);

}

  /* generated by template cd2java.Method*/
 abstract  public  List<de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver> getAdaptedPageSymbolResolverList ()

;
  default /* generated by template cd2java.Method*/
 public  void clearAdaptedPageSymbolResolver ()

 {
    /* generated by template methods.MethodDelegate*/

this.getAdaptedPageSymbolResolverList().clear();

}

  default /* generated by template cd2java.Method*/
 public  boolean addAdaptedPageSymbolResolver (de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().add(element);

}

  default /* generated by template cd2java.Method*/
 public  boolean addAllAdaptedPageSymbolResolver (Collection<? extends de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().addAll(collection);

}

  default /* generated by template cd2java.Method*/
 public  boolean removeAdaptedPageSymbolResolver (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().remove(element);

}

  default /* generated by template cd2java.Method*/
 public  boolean removeAllAdaptedPageSymbolResolver (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().removeAll(collection);

}

  default /* generated by template cd2java.Method*/
 public  boolean retainAllAdaptedPageSymbolResolver (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().retainAll(collection);

}

  default /* generated by template cd2java.Method*/
 public  boolean removeIfAdaptedPageSymbolResolver (Predicate<? super de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver> filter)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().removeIf(filter);

}

  default /* generated by template cd2java.Method*/
 public  void forEachAdaptedPageSymbolResolver (Consumer<? super de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver> action)

 {
    /* generated by template methods.MethodDelegate*/

this.getAdaptedPageSymbolResolverList().forEach(action);

}

  default /* generated by template cd2java.Method*/
 public  void addAdaptedPageSymbolResolver (int index,de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver element)

 {
    /* generated by template methods.MethodDelegate*/

this.getAdaptedPageSymbolResolverList().add(index, element);

}

  default /* generated by template cd2java.Method*/
 public  boolean addAllAdaptedPageSymbolResolver (int index,Collection<? extends de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().addAll(index, collection);

}

  default /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver removeAdaptedPageSymbolResolver (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().remove(index);

}

  default /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver setAdaptedPageSymbolResolver (int index,de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAdaptedPageSymbolResolverList().set(index, element);

}

  default /* generated by template cd2java.Method*/
 public  void replaceAllAdaptedPageSymbolResolver (UnaryOperator<de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver> operator)

 {
    /* generated by template methods.MethodDelegate*/

this.getAdaptedPageSymbolResolverList().replaceAll(operator);

}

  default /* generated by template cd2java.Method*/
 public  void sortAdaptedPageSymbolResolver (Comparator<? super de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver> comparator)

 {
    /* generated by template methods.MethodDelegate*/

this.getAdaptedPageSymbolResolverList().sort(comparator);

}

  /* generated by template cd2java.Method*/
 abstract  public  void setAdaptedPageSymbolResolverList (List<de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver> adaptedPageSymbolResolver)

;
  default /* generated by template cd2java.Method*/
 public  List<de.monticore.gettingstarted.website._symboltable.PageSymbol> resolveAdaptedPage (boolean foundSymbols,String name,de.monticore.symboltable.modifiers.AccessModifier modifier,java.util.function.Predicate<de.monticore.gettingstarted.website._symboltable.PageSymbol> predicate)

 {
    /* generated by template _symboltable.iglobalscope.ResolveAdapted*/

    List<de.monticore.gettingstarted.website._symboltable.PageSymbol> adaptedSymbols = new ArrayList<de.monticore.gettingstarted.website._symboltable.PageSymbol>();
    for (de.monticore.gettingstarted.website._symboltable.IPageSymbolResolver symDel : getAdaptedPageSymbolResolverList()) {
        adaptedSymbols.addAll(symDel.resolveAdaptedPageSymbol(foundSymbols, name, modifier, predicate));
    }
    return adaptedSymbols;
}

  default /* generated by template cd2java.Method*/
 public  List<de.monticore.gettingstarted.website._symboltable.PageSymbol> resolvePageMany (boolean foundSymbols,String name,de.monticore.symboltable.modifiers.AccessModifier modifier,java.util.function.Predicate<de.monticore.gettingstarted.website._symboltable.PageSymbol> predicate)

 {
    /* generated by template _symboltable.iglobalscope.ResolveMany4GlobalScope*/

  // First, try to resolve the symbol in the current scope and its sub scopes.
  List<de.monticore.gettingstarted.website._symboltable.PageSymbol> resolvedSymbol = resolvePageDownMany(foundSymbols, name,  modifier, predicate);

  if (!resolvedSymbol.isEmpty()) {
    return resolvedSymbol;
  }

  // Symbol not found: try to load corresponding model and build its symbol table
  loadPage(name);

  // Maybe the symbol now exists in this scope (or its sub scopes). So, resolve down, again.
  resolvedSymbol = resolvePageDownMany(false, name, modifier, predicate);
  foundSymbols = foundSymbols  || resolvedSymbol.size() > 0;
  if (!foundSymbols && !isPageSymbolsAlreadyResolved()){
    setPageSymbolsAlreadyResolved(true);
    resolvedSymbol.addAll(resolveAdaptedPage(foundSymbols, name, modifier, predicate));
  }
  setPageSymbolsAlreadyResolved(false);
  return resolvedSymbol;
}

  /* generated by template cd2java.Method*/
 abstract  public  void loadPage (String name)

;
  /* generated by template cd2java.Method*/
 abstract  public  void loadFileForModelName (String modelName)

;
  default /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._symboltable.IWebsiteScope getEnclosingScope ()

 {
    Log.error("0xA6100x99515 GlobalScope WebsiteGlobalScope has no EnclosingScope, so you cannot call methodgetEnclosingScope.");
    return null;
}

  default /* generated by template cd2java.Method*/
 public  void setEnclosingScope (de.monticore.gettingstarted.website._symboltable.IWebsiteScope enclosingScope)

 {
    Log.error("0xA6100x99515 GlobalScope WebsiteGlobalScope has no EnclosingScope, so you cannot call methodsetEnclosingScope.");
}

  default /* generated by template cd2java.Method*/
 public  String getName ()

 {
    Log.error("0xA6101x31345 Global scopes do not have names.");
    return null;
}

  default /* generated by template cd2java.Method*/
 public  boolean isPresentName ()

 {
    return false;
}

  default /* generated by template cd2java.Method*/
 public  boolean checkIfContinueAsSubScope (String symbolName)

 {
    return false;
}

  /* generated by template cd2java.Method*/
 abstract  public  Map<String,de.monticore.symboltable.serialization.ISymbolDeSer> getSymbolDeSers ()

;
  default /* generated by template cd2java.Method*/
 public  void putSymbolDeSer (String key,de.monticore.symboltable.serialization.ISymbolDeSer value)

 {
    getSymbolDeSers().put(key, value);
}

  default /* generated by template cd2java.Method*/
 public  de.monticore.symboltable.serialization.ISymbolDeSer getSymbolDeSer (String key)

 {
    return getSymbolDeSers().get(key);
}

  default /* generated by template cd2java.Method*/
 public  void putPageSymbolDeSer (String kind)

 {
    putSymbolDeSer(kind, new de.monticore.gettingstarted.website._symboltable.PageSymbolDeSer());
}

  default /* generated by template cd2java.Method*/
 public  de.monticore.symboltable.serialization.ISymbolDeSer getPageSymbolDeSer ()

 {
    return getSymbolDeSer("de.monticore.gettingstarted.website._symboltable.WebsiteScope");
}

  /* generated by template cd2java.Method*/
 abstract  public  IWebsiteGlobalScope getRealThis ()

;
}

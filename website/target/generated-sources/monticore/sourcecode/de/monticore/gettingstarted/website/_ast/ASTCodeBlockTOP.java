/* generated from model Website */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package de.monticore.gettingstarted.website._ast;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;

import de.monticore.ast.ASTCNode;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;


/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 abstract  public  class ASTCodeBlockTOP extends ASTCNode  implements de.monticore.gettingstarted.website._ast.ASTPageContentElement,de.monticore.gettingstarted.website._ast.ASTWebsiteNode {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<de.monticore.gettingstarted.website._ast.ASTParagraph> paragraphs
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.gettingstarted.website._symboltable.IWebsiteScope enclosingScope
  
;


    /* generated by template cd2java.Constructor*/
 protected  ASTCodeBlockTOP()
 {
  /* generated by template cd2java.EmptyBody*/
// empty body

}


    /* generated by template cd2java.Method*/
 public  boolean deepEquals (Object o)

 {
         return deepEquals(o, true);
}

    /* generated by template cd2java.Method*/
 public  boolean deepEquals (Object o,boolean forceSameOrder)

 {
    /* generated by template data.DeepEqualsWithOrder*/

      ASTCodeBlock comp;
    if ((o instanceof ASTCodeBlock)) {
      comp = (ASTCodeBlock) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing paragraphs
    if (this.paragraphs.size() != comp.paragraphs.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<de.monticore.gettingstarted.website._ast.ASTParagraph> it1 = this.paragraphs.iterator();
        Iterator<de.monticore.gettingstarted.website._ast.ASTParagraph> it2 = comp.paragraphs.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEquals(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<de.monticore.gettingstarted.website._ast.ASTParagraph> it1 = this.paragraphs.iterator();
        while (it1.hasNext()) {
          de.monticore.gettingstarted.website._ast.ASTParagraph oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<de.monticore.gettingstarted.website._ast.ASTParagraph> it2 = comp.paragraphs.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEquals(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
    return true;     


}

    /* generated by template cd2java.Method*/
 public  boolean deepEqualsWithComments (Object o)

 {
         return deepEqualsWithComments(o, true);
}

    /* generated by template cd2java.Method*/
 public  boolean deepEqualsWithComments (Object o,boolean forceSameOrder)

 {
    /* generated by template data.DeepEqualsWithComments*/

      ASTCodeBlock comp;
    if ((o instanceof ASTCodeBlock)) {
      comp = (ASTCodeBlock) o;
    } else {
      return false;
    }
    if (!equalsWithComments(comp)) {
      return false;
    }
    // comparing paragraphs
    if (this.paragraphs.size() != comp.paragraphs.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<de.monticore.gettingstarted.website._ast.ASTParagraph> it1 = this.paragraphs.iterator();
        Iterator<de.monticore.gettingstarted.website._ast.ASTParagraph> it2 = comp.paragraphs.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEqualsWithComments(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<de.monticore.gettingstarted.website._ast.ASTParagraph> it1 = this.paragraphs.iterator();
        while (it1.hasNext()) {
          de.monticore.gettingstarted.website._ast.ASTParagraph oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<de.monticore.gettingstarted.website._ast.ASTParagraph> it2 = comp.paragraphs.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEqualsWithComments(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
    return true;     

}

    /* generated by template cd2java.Method*/
 public  boolean equalAttributes (Object o)

 {
    /* generated by template data.EqualAttributes*/

    return o instanceof ASTCodeBlock;


}

    /* generated by template cd2java.Method*/
 public  boolean equalsWithComments (Object o)

 {
    /* generated by template data.EqualsWithComments*/

      ASTCodeBlock comp;
    if ((o instanceof ASTCodeBlock)) {
      comp = (ASTCodeBlock) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing comments
    if (get_PreCommentList().size() == comp.get_PreCommentList().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PreCommentList().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PreCommentList().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    
    if (get_PostCommentList().size() == comp.get_PostCommentList().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PostCommentList().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PostCommentList().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    return true;

}

    /* generated by template cd2java.Method*/
 public  ASTCodeBlock deepClone ()

 {
        return deepClone(_construct());
}

    /* generated by template cd2java.Method*/
 public  ASTCodeBlock deepClone (ASTCodeBlock result)

 {
    /* generated by template data.DeepCloneWithParameters*/


  result.set_SourcePositionStart(get_SourcePositionStart().clone());
  result.set_SourcePositionEnd(get_SourcePositionEnd().clone());
  for (de.monticore.ast.Comment x : get_PreCommentList()) {
    result.get_PreCommentList().add(new de.monticore.ast.Comment(x.getText()));
  }
  for (de.monticore.ast.Comment x : get_PostCommentList()) {
    result.get_PostCommentList().add(new de.monticore.ast.Comment(x.getText()));
  }

      getParagraphList().forEach(s -> result.paragraphs.add(s.deepClone()));
    
    return result;

}

    /* generated by template cd2java.Method*/
 public  boolean containsParagraph (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().contains(element);

}

    /* generated by template cd2java.Method*/
 public  boolean containsAllParagraphs (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().containsAll(collection);

}

    /* generated by template cd2java.Method*/
 public  boolean isEmptyParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().isEmpty();

}

    /* generated by template cd2java.Method*/
 public  Iterator<de.monticore.gettingstarted.website._ast.ASTParagraph> iteratorParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().iterator();

}

    /* generated by template cd2java.Method*/
 public  int sizeParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().size();

}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._ast.ASTParagraph[] toArrayParagraphs (de.monticore.gettingstarted.website._ast.ASTParagraph[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().toArray(array);

}

    /* generated by template cd2java.Method*/
 public  Object[] toArrayParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().toArray();

}

    /* generated by template cd2java.Method*/
 public  Spliterator<de.monticore.gettingstarted.website._ast.ASTParagraph> spliteratorParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().spliterator();

}

    /* generated by template cd2java.Method*/
 public  Stream<de.monticore.gettingstarted.website._ast.ASTParagraph> streamParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().stream();

}

    /* generated by template cd2java.Method*/
 public  Stream<de.monticore.gettingstarted.website._ast.ASTParagraph> parallelStreamParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().parallelStream();

}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._ast.ASTParagraph getParagraph (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().get(index);

}

    /* generated by template cd2java.Method*/
 public  int indexOfParagraph (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().indexOf(element);

}

    /* generated by template cd2java.Method*/
 public  int lastIndexOfParagraph (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/
 public  boolean equalsParagraphs (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().equals(o);

}

    /* generated by template cd2java.Method*/
 public  int hashCodeParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().hashCode();

}

    /* generated by template cd2java.Method*/
 public  ListIterator<de.monticore.gettingstarted.website._ast.ASTParagraph> listIteratorParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().listIterator();

}

    /* generated by template cd2java.Method*/
 public  ListIterator<de.monticore.gettingstarted.website._ast.ASTParagraph> listIteratorParagraphs (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().listIterator(index);

}

    /* generated by template cd2java.Method*/
 public  List<de.monticore.gettingstarted.website._ast.ASTParagraph> subListParagraphs (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().subList(start, end);

}

    /* generated by template cd2java.Method*/
 public  List<de.monticore.gettingstarted.website._ast.ASTParagraph> getParagraphList ()

 {
    /* generated by template methods.Get*/

return this.paragraphs;

}

    /* generated by template cd2java.Method*/
 public  void clearParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

this.getParagraphList().clear();

}

    /* generated by template cd2java.Method*/
 public  boolean addParagraph (de.monticore.gettingstarted.website._ast.ASTParagraph element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().add(element);

}

    /* generated by template cd2java.Method*/
 public  boolean addAllParagraphs (Collection<? extends de.monticore.gettingstarted.website._ast.ASTParagraph> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().addAll(collection);

}

    /* generated by template cd2java.Method*/
 public  boolean removeParagraph (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().remove(element);

}

    /* generated by template cd2java.Method*/
 public  boolean removeAllParagraphs (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().removeAll(collection);

}

    /* generated by template cd2java.Method*/
 public  boolean retainAllParagraphs (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().retainAll(collection);

}

    /* generated by template cd2java.Method*/
 public  boolean removeIfParagraph (Predicate<? super de.monticore.gettingstarted.website._ast.ASTParagraph> filter)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().removeIf(filter);

}

    /* generated by template cd2java.Method*/
 public  void forEachParagraphs (Consumer<? super de.monticore.gettingstarted.website._ast.ASTParagraph> action)

 {
    /* generated by template methods.MethodDelegate*/

this.getParagraphList().forEach(action);

}

    /* generated by template cd2java.Method*/
 public  void addParagraph (int index,de.monticore.gettingstarted.website._ast.ASTParagraph element)

 {
    /* generated by template methods.MethodDelegate*/

this.getParagraphList().add(index, element);

}

    /* generated by template cd2java.Method*/
 public  boolean addAllParagraphs (int index,Collection<? extends de.monticore.gettingstarted.website._ast.ASTParagraph> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().addAll(index, collection);

}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._ast.ASTParagraph removeParagraph (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().remove(index);

}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._ast.ASTParagraph setParagraph (int index,de.monticore.gettingstarted.website._ast.ASTParagraph element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().set(index, element);

}

    /* generated by template cd2java.Method*/
 public  void replaceAllParagraphs (UnaryOperator<de.monticore.gettingstarted.website._ast.ASTParagraph> operator)

 {
    /* generated by template methods.MethodDelegate*/

this.getParagraphList().replaceAll(operator);

}

    /* generated by template cd2java.Method*/
 public  void sortParagraphs (Comparator<? super de.monticore.gettingstarted.website._ast.ASTParagraph> comparator)

 {
    /* generated by template methods.MethodDelegate*/

this.getParagraphList().sort(comparator);

}

    /* generated by template cd2java.Method*/
 public  void setParagraphList (List<de.monticore.gettingstarted.website._ast.ASTParagraph> paragraphs)

 {
    /* generated by template methods.Set*/

this.paragraphs = paragraphs;

}

    /* generated by template cd2java.Method*/
 public  void accept (de.monticore.gettingstarted.website._visitor.WebsiteTraverser visitor)

 {
    /* generated by template _ast.ast_class.Accept*/

    // We allow a down cast here, because the subclass ASTCodeBlock must exist
    // and only this subclass may exist in the AST and hence, only this class may
    // be handled by a visitor. All other cases are invalid an throw an exception!
    // This decision was made during MC Sprint Review on 16.03.2015.
    if (this instanceof ASTCodeBlock) {
      visitor.handle((ASTCodeBlock) this);
    } else {
      throw new UnsupportedOperationException("0xA7011x45093 Only handwritten class ASTCodeBlock is supported for the visitor");
    }

}

    /* generated by template cd2java.Method*/
 public  void accept (de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof de.monticore.gettingstarted.website._visitor.WebsiteTraverser) {
    accept((de.monticore.gettingstarted.website._visitor.WebsiteTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x27753 AST node type ASTCodeBlock expected a visitor of type de.monticore.gettingstarted.website._visitor.WebsiteTraverser, but got de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/
 public  void accept (de.monticore.mcbasics._visitor.MCBasicsTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof de.monticore.gettingstarted.website._visitor.WebsiteTraverser) {
    accept((de.monticore.gettingstarted.website._visitor.WebsiteTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x69963 AST node type ASTCodeBlock expected a visitor of type de.monticore.gettingstarted.website._visitor.WebsiteTraverser, but got de.monticore.mcbasics._visitor.MCBasicsTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/
 public  void accept (de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof de.monticore.gettingstarted.website._visitor.WebsiteTraverser) {
    accept((de.monticore.gettingstarted.website._visitor.WebsiteTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x97003 AST node type ASTCodeBlock expected a visitor of type de.monticore.gettingstarted.website._visitor.WebsiteTraverser, but got de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/
 public  void accept (de.monticore.visitor.ITraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof de.monticore.gettingstarted.website._visitor.WebsiteTraverser) {
    accept((de.monticore.gettingstarted.website._visitor.WebsiteTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x67589 AST node type ASTCodeBlock expected a visitor of type de.monticore.gettingstarted.website._visitor.WebsiteTraverser, but got de.monticore.visitor.ITraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/
 protected  ASTCodeBlock _construct ()

 {
    return de.monticore.gettingstarted.website.WebsiteMill.codeBlockBuilder().uncheckedBuild();
}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._symboltable.IWebsiteScope getEnclosingScope ()

 {
    /* generated by template methods.Get*/

return this.enclosingScope;

}

    /* generated by template cd2java.Method*/
 public  void setEnclosingScope (de.monticore.gettingstarted.website._symboltable.IWebsiteScope enclosingScope)

 {
    /* generated by template methods.Set*/

this.enclosingScope = enclosingScope;

}

    /* generated by template cd2java.Method*/
 public  void setEnclosingScope (de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof de.monticore.gettingstarted.website._symboltable.IWebsiteScope){
    this.enclosingScope = (de.monticore.gettingstarted.website._symboltable.IWebsiteScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x60179 The EnclosingScope form type de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope could not be casted to the type de.monticore.gettingstarted.website._symboltable.IWebsiteScope. Please call the Method setEnclosingScope with a parameter form type de.monticore.gettingstarted.website._symboltable.IWebsiteScope");
  }
}

    /* generated by template cd2java.Method*/
 public  void setEnclosingScope (de.monticore.mcbasics._symboltable.IMCBasicsScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof de.monticore.gettingstarted.website._symboltable.IWebsiteScope){
    this.enclosingScope = (de.monticore.gettingstarted.website._symboltable.IWebsiteScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x60179 The EnclosingScope form type de.monticore.mcbasics._symboltable.IMCBasicsScope could not be casted to the type de.monticore.gettingstarted.website._symboltable.IWebsiteScope. Please call the Method setEnclosingScope with a parameter form type de.monticore.gettingstarted.website._symboltable.IWebsiteScope");
  }
}

    /* generated by template cd2java.Method*/
 public  void setEnclosingScope (de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof de.monticore.gettingstarted.website._symboltable.IWebsiteScope){
    this.enclosingScope = (de.monticore.gettingstarted.website._symboltable.IWebsiteScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x60179 The EnclosingScope form type de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope could not be casted to the type de.monticore.gettingstarted.website._symboltable.IWebsiteScope. Please call the Method setEnclosingScope with a parameter form type de.monticore.gettingstarted.website._symboltable.IWebsiteScope");
  }
}


}



/* generated from model Website */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package de.monticore.gettingstarted.website._ast;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;

import de.monticore.ast.ASTCNode;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;


/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class ASTTextBlockBuilder extends de.monticore.ast.ASTNodeBuilder<ASTTextBlockBuilder>  {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  ASTTextBlockBuilder realBuilder
  
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  String title
  
;

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<de.monticore.gettingstarted.website._ast.ASTParagraph> paragraphs
  = new java.util.ArrayList<>()
;


    /* generated by template cd2java.Constructor*/
 public  ASTTextBlockBuilder()
 {
  this.realBuilder = (ASTTextBlockBuilder) this;
}


    /* generated by template cd2java.Method*/
 public  ASTTextBlock build ()

 {
    /* generated by template _ast.builder.BuildMethod*/

        if (!isValid()) {
            if (title == null) {
                Log.error("0xA4522 title of type String must not be null");
            }
          throw new IllegalStateException();
        }
        ASTTextBlock value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTTextBlock();
    value.setTitle(this.title);
    value.setParagraphList(this.paragraphs);
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;

}

    /* generated by template cd2java.Method*/
 public  boolean isValid ()

 {
    /* generated by template _ast.builder.IsValidMethod*/

        if (title == null) {
            return false;
        }
        return true;

}

    /* generated by template cd2java.Method*/
 public  String getTitle ()

 {
    /* generated by template methods.Get*/

return this.title;

}

    /* generated by template cd2java.Method*/
 public  boolean containsParagraph (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().contains(element);

}

    /* generated by template cd2java.Method*/
 public  boolean containsAllParagraphs (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().containsAll(collection);

}

    /* generated by template cd2java.Method*/
 public  boolean isEmptyParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().isEmpty();

}

    /* generated by template cd2java.Method*/
 public  Iterator<de.monticore.gettingstarted.website._ast.ASTParagraph> iteratorParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().iterator();

}

    /* generated by template cd2java.Method*/
 public  int sizeParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().size();

}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._ast.ASTParagraph[] toArrayParagraphs (de.monticore.gettingstarted.website._ast.ASTParagraph[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().toArray(array);

}

    /* generated by template cd2java.Method*/
 public  Object[] toArrayParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().toArray();

}

    /* generated by template cd2java.Method*/
 public  Spliterator<de.monticore.gettingstarted.website._ast.ASTParagraph> spliteratorParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().spliterator();

}

    /* generated by template cd2java.Method*/
 public  Stream<de.monticore.gettingstarted.website._ast.ASTParagraph> streamParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().stream();

}

    /* generated by template cd2java.Method*/
 public  Stream<de.monticore.gettingstarted.website._ast.ASTParagraph> parallelStreamParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().parallelStream();

}

    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._ast.ASTParagraph getParagraph (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().get(index);

}

    /* generated by template cd2java.Method*/
 public  int indexOfParagraph (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().indexOf(element);

}

    /* generated by template cd2java.Method*/
 public  int lastIndexOfParagraph (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/
 public  boolean equalsParagraphs (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().equals(o);

}

    /* generated by template cd2java.Method*/
 public  int hashCodeParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().hashCode();

}

    /* generated by template cd2java.Method*/
 public  ListIterator<de.monticore.gettingstarted.website._ast.ASTParagraph> listIteratorParagraphs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().listIterator();

}

    /* generated by template cd2java.Method*/
 public  ListIterator<de.monticore.gettingstarted.website._ast.ASTParagraph> listIteratorParagraphs (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().listIterator(index);

}

    /* generated by template cd2java.Method*/
 public  List<de.monticore.gettingstarted.website._ast.ASTParagraph> subListParagraphs (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getParagraphList().subList(start, end);

}

    /* generated by template cd2java.Method*/
 public  List<de.monticore.gettingstarted.website._ast.ASTParagraph> getParagraphList ()

 {
    /* generated by template methods.Get*/

return this.paragraphs;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder setTitle (String title)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.title = title;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder clearParagraphs ()

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getParagraphList().clear();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder addParagraph (de.monticore.gettingstarted.website._ast.ASTParagraph element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getParagraphList().add(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder addAllParagraphs (Collection<? extends de.monticore.gettingstarted.website._ast.ASTParagraph> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getParagraphList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder removeParagraph (Object element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getParagraphList().remove(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder removeAllParagraphs (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getParagraphList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder retainAllParagraphs (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getParagraphList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder removeIfParagraph (Predicate<? super de.monticore.gettingstarted.website._ast.ASTParagraph> filter)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getParagraphList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder forEachParagraphs (Consumer<? super de.monticore.gettingstarted.website._ast.ASTParagraph> action)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getParagraphList().forEach(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder addParagraph (int index,de.monticore.gettingstarted.website._ast.ASTParagraph element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getParagraphList().add(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder addAllParagraphs (int index,Collection<? extends de.monticore.gettingstarted.website._ast.ASTParagraph> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getParagraphList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder removeParagraph (int index)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getParagraphList().remove(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder setParagraph (int index,de.monticore.gettingstarted.website._ast.ASTParagraph element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getParagraphList().set(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder replaceAllParagraphs (UnaryOperator<de.monticore.gettingstarted.website._ast.ASTParagraph> operator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getParagraphList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder sortParagraphs (Comparator<? super de.monticore.gettingstarted.website._ast.ASTParagraph> comparator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getParagraphList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder setParagraphsList (List<de.monticore.gettingstarted.website._ast.ASTParagraph> paragraphs)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.paragraphs = paragraphs;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder set_SourcePositionEnd (SourcePosition end)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEnd(end);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder set_SourcePositionEndAbsent ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEndAbsent();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder set_SourcePositionStart (SourcePosition start)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStart(start);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder set_SourcePositionStartAbsent ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStartAbsent();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder clear_PreComments ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PreComments();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder add_PreComment (Comment precomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(precomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder add_PreComment (int index,Comment precomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder addAll_PreComments (Collection<Comment> precomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(precomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder addAll_PreComments (int index,Collection<Comment> precomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(index, precomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder remove_PreComment (Object element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder remove_PreComment (int index)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder removeAll_PreComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder retainAll_PreComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder removeIf_PreComment (Predicate<? super Comment> filter)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PreComment(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder forEach_PreComments (Consumer<? super Comment> action)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PreComments(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder replaceAll_PreComments (UnaryOperator<Comment> operator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PreComments(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder sort_PreComments (Comparator<? super Comment> comparator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PreComments(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder set_PreCommentList (List<Comment> preComments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreCommentList(preComments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder set_PreComment (int index,Comment precomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder clear_PostComments ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PostComments();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder add_PostComment (Comment postcomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(postcomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder add_PostComment (int index,Comment postcomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder addAll_PostComments (Collection<Comment> postcomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(postcomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder addAll_PostComments (int index,Collection<Comment> postcomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(index, postcomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder remove_PostComment (Object element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder remove_PostComment (int index)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder removeAll_PostComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder retainAll_PostComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder removeIf_PostComment (Predicate<? super Comment> filter)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PostComment(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder forEach_PostComments (Consumer<? super Comment> action)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PostComments(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder replaceAll_PostComments (UnaryOperator<Comment> operator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PostComments(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder sort_PostComments (Comparator<? super Comment> comparator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PostComments(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder set_PostCommentList (List<Comment> postComments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostCommentList(postComments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlockBuilder set_PostComment (int index,Comment postcomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/
 public  ASTTextBlock uncheckedBuild ()

 {
    /* generated by template _ast.builder.BuildMethod*/

        ASTTextBlock value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTTextBlock();
    value.setTitle(this.title);
    value.setParagraphList(this.paragraphs);
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;

}


}



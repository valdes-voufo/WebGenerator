/* generated from model Website */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package de.monticore.gettingstarted.website._cocos;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;



/* Hookpoint: ClassContent:Imports */

/* generated by template cd2java.Annotations*/
// empty template: no Annotation


/* Hookpoint: ClassContent:Annotations */

 public  class WebsiteCoCoChecker  {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/
/* generated by template cd2java.Annotations*/
// empty template: no Annotation

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.gettingstarted.website._visitor.WebsiteTraverser traverser
  
;


    /* generated by template cd2java.Constructor*/
 public  WebsiteCoCoChecker()
 {
  /* generated by template _cocos.CoCoCheckerConstructor*/

  traverser = de.monticore.gettingstarted.website.WebsiteMill.inheritanceTraverser();
}


    /* generated by template cd2java.Method*/
 public  de.monticore.gettingstarted.website._visitor.WebsiteTraverser getTraverser ()

 {
    /* generated by template methods.Get*/

return this.traverser;

}

    /* generated by template cd2java.Method*/
 public  void setTraverser (de.monticore.gettingstarted.website._visitor.WebsiteTraverser traverser)

 {
    /* generated by template methods.Set*/

this.traverser = traverser;

}

    /* generated by template cd2java.Method*/
 public  void addChecker (de.monticore.gettingstarted.website._cocos.WebsiteCoCoChecker checker)

 {
    /* generated by template _cocos.AddChecker*/


  checker.getTraverser().getWebsiteVisitorList().forEach(s -> traverser.add4Website(s));
  checker.getTraverser().getMCCommonLiteralsVisitorList().forEach(s -> traverser.add4MCCommonLiterals(s));
  checker.getTraverser().getMCBasicsVisitorList().forEach(s -> traverser.add4MCBasics(s));
  checker.getTraverser().getMCLiteralsBasisVisitorList().forEach(s -> traverser.add4MCLiteralsBasis(s));

}

    /* generated by template cd2java.Method*/
 public  void checkAll (de.monticore.gettingstarted.website._ast.ASTWebsiteNode node)

 {
    node.accept(getTraverser());
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTWebsiteCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTNavigationCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTNavigationItemCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTPageCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTPageContentCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTLinkCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTPictureCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTParagraphCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTTextBlockCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTCodeBlockCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTAsideCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTRowCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTLandImageCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTCardCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTTableCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTWebsiteElementCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTPageContentElementCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.gettingstarted.website._cocos.WebsiteASTWebsiteNodeCoCo coco)

 {
    traverser.add4Website(coco);
}

    /* generated by template cd2java.Method*/
 public  void addChecker (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsCoCoChecker checker)

 {
    /* generated by template _cocos.AddChecker*/


  checker.getTraverser().getMCCommonLiteralsVisitorList().forEach(s -> traverser.add4MCCommonLiterals(s));
  checker.getTraverser().getMCBasicsVisitorList().forEach(s -> traverser.add4MCBasics(s));
  checker.getTraverser().getMCLiteralsBasisVisitorList().forEach(s -> traverser.add4MCLiteralsBasis(s));

}

    /* generated by template cd2java.Method*/
 public  void checkAll (de.monticore.literals.mccommonliterals._ast.ASTMCCommonLiteralsNode node)

 {
    node.accept(getTraverser());
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTNullLiteralCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTBooleanLiteralCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTCharLiteralCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTStringLiteralCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTNatLiteralCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTSignedNatLiteralCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTBasicLongLiteralCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTSignedBasicLongLiteralCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTBasicFloatLiteralCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTSignedBasicFloatLiteralCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTBasicDoubleLiteralCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTSignedBasicDoubleLiteralCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTSignedLiteralCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTNumericLiteralCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTSignedNumericLiteralCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mccommonliterals._cocos.MCCommonLiteralsASTMCCommonLiteralsNodeCoCo coco)

 {
    traverser.add4MCCommonLiterals(coco);
}

    /* generated by template cd2java.Method*/
 public  void addChecker (de.monticore.mcbasics._cocos.MCBasicsCoCoChecker checker)

 {
    /* generated by template _cocos.AddChecker*/


  checker.getTraverser().getMCBasicsVisitorList().forEach(s -> traverser.add4MCBasics(s));

}

    /* generated by template cd2java.Method*/
 public  void checkAll (de.monticore.mcbasics._ast.ASTMCBasicsNode node)

 {
    node.accept(getTraverser());
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.mcbasics._cocos.MCBasicsASTMCBasicsNodeCoCo coco)

 {
    traverser.add4MCBasics(coco);
}

    /* generated by template cd2java.Method*/
 public  void addChecker (de.monticore.literals.mcliteralsbasis._cocos.MCLiteralsBasisCoCoChecker checker)

 {
    /* generated by template _cocos.AddChecker*/


  checker.getTraverser().getMCLiteralsBasisVisitorList().forEach(s -> traverser.add4MCLiteralsBasis(s));

}

    /* generated by template cd2java.Method*/
 public  void checkAll (de.monticore.literals.mcliteralsbasis._ast.ASTMCLiteralsBasisNode node)

 {
    node.accept(getTraverser());
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mcliteralsbasis._cocos.MCLiteralsBasisASTLiteralCoCo coco)

 {
    traverser.add4MCLiteralsBasis(coco);
}

    /* generated by template cd2java.Method*/
 public  void addCoCo (de.monticore.literals.mcliteralsbasis._cocos.MCLiteralsBasisASTMCLiteralsBasisNodeCoCo coco)

 {
    traverser.add4MCLiteralsBasis(coco);
}


}


